{"id":"../src/lib/file-format-spec.ts","dependencies":[{"name":"/Users/zacharymarion/code/speedscope/tsconfig.json","includedInParent":true,"mtime":1703077483439},{"name":"/Users/zacharymarion/code/speedscope/package.json","includedInParent":true,"mtime":1704044739602}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileFormat = void 0;\n// This file contains types which specify the speedscope file format.\nvar FileFormat;\nexports.FileFormat = FileFormat;\n\n(function (FileFormat) {\n  let ProfileType;\n\n  (function (ProfileType) {\n    ProfileType[\"EVENTED\"] = \"evented\";\n    ProfileType[\"SAMPLED\"] = \"sampled\";\n  })(ProfileType = FileFormat.ProfileType || (FileFormat.ProfileType = {}));\n\n  let EventType;\n\n  (function (EventType) {\n    EventType[\"OPEN_FRAME\"] = \"O\";\n    EventType[\"CLOSE_FRAME\"] = \"C\";\n  })(EventType = FileFormat.EventType || (FileFormat.EventType = {}));\n})(FileFormat || (exports.FileFormat = FileFormat = {}));"},"sourceMaps":{"js":{"mappings":[{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":3,"column":6},"generated":{"line":8,"column":0}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":3,"column":17},"generated":{"line":8,"column":4}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":3,"column":6},"generated":{"line":8,"column":14}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":11,"column":0}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":11,"column":1}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":3,"column":17},"generated":{"line":11,"column":11}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":11,"column":21}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":3,"column":27},"generated":{"line":11,"column":23}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":12,"column":0}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":46,"column":14},"generated":{"line":12,"column":6}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":12,"column":17}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":14,"column":0}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":14,"column":3}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":46,"column":14},"generated":{"line":14,"column":13}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":14,"column":24}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":46,"column":25},"generated":{"line":14,"column":26}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":47,"column":4},"generated":{"line":15,"column":0}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":47,"column":4},"generated":{"line":15,"column":4}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":47,"column":4},"generated":{"line":15,"column":15}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":47,"column":4},"generated":{"line":15,"column":16}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":47,"column":4},"generated":{"line":15,"column":25}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":47,"column":4},"generated":{"line":15,"column":26}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":47,"column":4},"generated":{"line":15,"column":29}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":47,"column":4},"generated":{"line":15,"column":38}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":16,"column":0}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":16,"column":4}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":16,"column":15}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":16,"column":16}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":16,"column":25}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":16,"column":26}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":16,"column":29}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":16,"column":38}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":49,"column":3},"generated":{"line":17,"column":0}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":17,"column":3}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":46,"column":14},"generated":{"line":17,"column":5}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":46,"column":25},"generated":{"line":17,"column":16}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":46,"column":14},"generated":{"line":17,"column":19}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":46,"column":14},"generated":{"line":17,"column":29}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":46,"column":14},"generated":{"line":17,"column":30}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":46,"column":14},"generated":{"line":17,"column":41}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":46,"column":14},"generated":{"line":17,"column":46}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":46,"column":14},"generated":{"line":17,"column":56}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":46,"column":14},"generated":{"line":17,"column":57}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":46,"column":14},"generated":{"line":17,"column":68}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":46,"column":25},"generated":{"line":17,"column":71}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":46,"column":14},"generated":{"line":17,"column":73}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":17,"column":74}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":122,"column":2},"generated":{"line":19,"column":0}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":122,"column":14},"generated":{"line":19,"column":6}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":122,"column":2},"generated":{"line":19,"column":15}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":122,"column":2},"generated":{"line":21,"column":0}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":122,"column":2},"generated":{"line":21,"column":3}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":122,"column":14},"generated":{"line":21,"column":13}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":122,"column":2},"generated":{"line":21,"column":22}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":122,"column":23},"generated":{"line":21,"column":24}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":123,"column":4},"generated":{"line":22,"column":0}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":123,"column":4},"generated":{"line":22,"column":4}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":123,"column":4},"generated":{"line":22,"column":13}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":123,"column":4},"generated":{"line":22,"column":14}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":123,"column":4},"generated":{"line":22,"column":26}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":123,"column":4},"generated":{"line":22,"column":27}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":123,"column":4},"generated":{"line":22,"column":30}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":123,"column":4},"generated":{"line":22,"column":33}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":124,"column":4},"generated":{"line":23,"column":0}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":124,"column":4},"generated":{"line":23,"column":4}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":124,"column":4},"generated":{"line":23,"column":13}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":124,"column":4},"generated":{"line":23,"column":14}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":124,"column":4},"generated":{"line":23,"column":27}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":124,"column":4},"generated":{"line":23,"column":28}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":124,"column":4},"generated":{"line":23,"column":31}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":124,"column":4},"generated":{"line":23,"column":34}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":125,"column":3},"generated":{"line":24,"column":0}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":122,"column":2},"generated":{"line":24,"column":3}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":122,"column":14},"generated":{"line":24,"column":5}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":122,"column":23},"generated":{"line":24,"column":14}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":122,"column":14},"generated":{"line":24,"column":17}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":122,"column":14},"generated":{"line":24,"column":27}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":122,"column":14},"generated":{"line":24,"column":28}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":122,"column":14},"generated":{"line":24,"column":37}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":122,"column":14},"generated":{"line":24,"column":42}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":122,"column":14},"generated":{"line":24,"column":52}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":122,"column":14},"generated":{"line":24,"column":53}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":122,"column":14},"generated":{"line":24,"column":62}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":122,"column":23},"generated":{"line":24,"column":65}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":122,"column":14},"generated":{"line":24,"column":67}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":122,"column":2},"generated":{"line":24,"column":68}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":145,"column":1},"generated":{"line":25,"column":0}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":25,"column":1}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":3,"column":17},"generated":{"line":25,"column":3}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":3,"column":27},"generated":{"line":25,"column":13}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":3,"column":17},"generated":{"line":25,"column":39}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":3,"column":27},"generated":{"line":25,"column":49}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":3,"column":27},"generated":{"line":25,"column":52}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":3,"column":27},"generated":{"line":25,"column":54}},{"source":"../src/lib/file-format-spec.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":25,"column":55}}],"sources":{"../src/lib/file-format-spec.ts":"// This file contains types which specify the speedscope file format.\n\nexport namespace FileFormat {\n  export type Profile = EventedProfile | SampledProfile\n\n  export interface File {\n    $schema: 'https://www.speedscope.app/file-format-schema.json'\n\n    // Data shared between profiles\n    shared: {\n      frames: Frame[]\n    }\n\n    // List of profile definitions\n    profiles: Profile[]\n\n    // The name of the contained profile group. If omitted, will use the name of\n    // the file itself.\n    // Added in 0.6.0\n    name?: string\n\n    // The index into the `profiles` array that should be displayed upon file\n    // load. If omitted, will default to displaying the first profile in the\n    // file.\n    //\n    // Added in 0.6.0\n    activeProfileIndex?: number\n\n    // The name of the the program which exported this profile. This isn't\n    // consumed but can be helpful for debugging generated data by seeing what\n    // was generating it! Recommended format is \"name@version\". e.g. when the\n    // file was exported by speedscope v0.6.0 itself, it will be\n    // \"speedscope@0.6.0\"\n    //\n    // Added in 0.6.0\n    exporter?: string\n  }\n\n  export interface Frame {\n    name: string\n    file?: string\n    line?: number\n    col?: number\n  }\n\n  export enum ProfileType {\n    EVENTED = 'evented',\n    SAMPLED = 'sampled',\n  }\n\n  export interface IProfile {\n    // Type of profile. This will future proof the file format to allow many\n    // different kinds of profiles to be contained and each type to be part of\n    // a discriminated union.\n    type: ProfileType\n  }\n\n  export interface EventedProfile extends IProfile {\n    type: ProfileType.EVENTED\n\n    // Name of the profile. Typically a filename for the source of the profile.\n    name: string\n\n    // Unit which all value are specified using in the profile.\n    unit: ValueUnit\n\n    // The starting value of the profile. This will typically be a timestamp.\n    // All event values will be relative to this startValue.\n    startValue: number\n\n    // The final value of the profile. This will typically be a timestamp. This\n    // must be greater than or equal to the startValue. This is useful in\n    // situations where the recorded profile extends past the end of the recorded\n    // events, which may happen if nothing was happening at the end of the\n    // profile.\n    endValue: number\n\n    // List of events that occured as part of this profile.\n    // The \"at\" field of every event must be in non-decreasing order.\n    events: (OpenFrameEvent | CloseFrameEvent)[]\n  }\n\n  // List of indices into the frame array\n  type SampledStack = number[]\n\n  export interface SampledProfile extends IProfile {\n    type: ProfileType.SAMPLED\n\n    // Name of the profile. Typically a filename for the source of the profile.\n    name: string\n\n    // Unit which all value are specified using in the profile.\n    unit: ValueUnit\n\n    // The starting value of the profile. This will typically be a timestamp.\n    // All event values will be relative to this startValue.\n    startValue: number\n\n    // The final value of the profile. This will typically be a timestamp. This\n    // must be greater than or equal to the startValue. This is useful in\n    // situations where the recorded profile extends past the end of the recorded\n    // events, which may happen if nothing was happening at the end of the\n    // profile.\n    endValue: number\n\n    // List of stacks\n    samples: SampledStack[]\n\n    // The weight of the sample at the given index. Should have\n    // the same length as the samples array.\n    weights: number[]\n  }\n\n  export type ValueUnit =\n    | 'none'\n    | 'nanoseconds'\n    | 'microseconds'\n    | 'milliseconds'\n    | 'seconds'\n    | 'bytes'\n\n  export enum EventType {\n    OPEN_FRAME = 'O',\n    CLOSE_FRAME = 'C',\n  }\n\n  interface IEvent {\n    type: EventType\n    at: number\n  }\n\n  // Indicates a stack frame opened. Every opened stack frame must have a\n  // corresponding close frame event, and the ordering must be balanced.\n  interface OpenFrameEvent extends IEvent {\n    type: EventType.OPEN_FRAME\n    // An index into the frames array in the shared data within the profile\n    frame: number\n  }\n\n  interface CloseFrameEvent extends IEvent {\n    type: EventType.CLOSE_FRAME\n    // An index into the frames array in the shared data within the profile\n    frame: number\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"2519f55dc3bd3f27b0cee8c0c6acb0a4","cacheData":{"env":{}}}