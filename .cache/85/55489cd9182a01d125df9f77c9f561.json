{"id":"index.html","dependencies":[{"name":"./reset.css","dynamic":true,"resolved":"/Users/zacharymarion/code/speedscope/assets/reset.css","parent":"/Users/zacharymarion/code/speedscope/assets/index.html"},{"name":"./favicon-32x32.png","dynamic":true,"resolved":"/Users/zacharymarion/code/speedscope/assets/favicon-32x32.png","parent":"/Users/zacharymarion/code/speedscope/assets/index.html"},{"name":"./favicon-16x16.png","dynamic":true,"resolved":"/Users/zacharymarion/code/speedscope/assets/favicon-16x16.png","parent":"/Users/zacharymarion/code/speedscope/assets/index.html"},{"name":"./../src/speedscope.tsx","dynamic":true,"resolved":"/Users/zacharymarion/code/speedscope/src/speedscope.tsx","parent":"/Users/zacharymarion/code/speedscope/assets/index.html"},{"name":"/Users/zacharymarion/code/speedscope/package.json","includedInParent":true,"mtime":1704044739602}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>speedscope</title>\n  <link href=\"https://fonts.googleapis.com/css?family=Source+Code+Pro\" rel=\"stylesheet\">\n  <script>// https://github.com/evanw/webgl-recorder\nfalse && function () {\n  var getContext = HTMLCanvasElement.prototype.getContext;\n  var requestAnimationFrame = window.requestAnimationFrame;\n  var frameSincePageLoad = 0;\n\n  function countFrames() {\n    frameSincePageLoad++;\n    requestAnimationFrame(countFrames);\n  }\n\n  window.requestAnimationFrame = function () {\n    return requestAnimationFrame.apply(window, arguments);\n  };\n\n  HTMLCanvasElement.prototype.getContext = function (type) {\n    var canvas = this;\n    var context = getContext.apply(canvas, arguments);\n\n    if (type === 'webgl' || type === 'experimental-webgl') {\n      var oldWidth = canvas.width;\n      var oldHeight = canvas.height;\n      var oldFrameCount = frameSincePageLoad;\n      var trace = [];\n      var variables = {};\n      var fakeContext = {\n        trace: trace,\n        compileTrace: compileTrace,\n        downloadTrace: downloadTrace\n      };\n      trace.push('  gl.canvas.width = ' + oldWidth + ';');\n      trace.push('  gl.canvas.height = ' + oldHeight + ';');\n\n      function compileTrace() {\n        var text = 'function* render(gl) {\\n';\n        text += '  // Recorded using https://github.com/evanw/webgl-recorder\\n';\n\n        for (var key in variables) {\n          text += '  var ' + key + 's = [];\\n';\n        }\n\n        text += trace.join('\\n');\n        text += '\\n}\\n';\n        return text;\n      }\n\n      function downloadTrace() {\n        var text = compileTrace();\n        var link = document.createElement('a');\n        link.href = URL.createObjectURL(new Blob([text], {\n          type: 'application/javascript'\n        }));\n        link.download = 'trace.js';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n\n      function getVariable(value) {\n        if (value instanceof WebGLActiveInfo || value instanceof WebGLBuffer || value instanceof WebGLFramebuffer || value instanceof WebGLProgram || value instanceof WebGLRenderbuffer || value instanceof WebGLShader || value instanceof WebGLShaderPrecisionFormat || value instanceof WebGLTexture || value instanceof WebGLUniformLocation) {\n          var name = value.constructor.name;\n          var list = variables[name] || (variables[name] = []);\n          var index = list.indexOf(value);\n\n          if (index === -1) {\n            index = list.length;\n            list.push(value);\n          }\n\n          return name + 's[' + index + ']';\n        }\n\n        return null;\n      }\n\n      console.timeStamp('start');\n      var start = performance.now();\n\n      for (var key in context) {\n        var value = context[key];\n\n        if (typeof value === 'function') {\n          fakeContext[key] = function (key, value) {\n            return function () {\n              trace.push(`// ${performance.now() - start}`);\n              var result = value.apply(context, arguments);\n              var args = [];\n\n              if (frameSincePageLoad !== oldFrameCount) {\n                oldFrameCount = frameSincePageLoad;\n                trace.push('  yield;');\n              }\n\n              if (canvas.width !== oldWidth || canvas.height !== oldHeight) {\n                oldWidth = canvas.width;\n                oldHeight = canvas.height;\n                trace.push('  gl.canvas.width = ' + oldWidth + ';');\n                trace.push('  gl.canvas.height = ' + oldHeight + ';');\n              }\n\n              for (var i = 0; i < arguments.length; i++) {\n                var arg = arguments[i];\n\n                if (typeof arg === 'number' || typeof arg === 'boolean' || typeof arg === 'string' || arg === null) {\n                  args.push(JSON.stringify(arg));\n                } else if (ArrayBuffer.isView(arg)) {\n                  args.push('new ' + arg.constructor.name + '([' + Array.prototype.slice.call(arg) + '])');\n                } else {\n                  var variable = getVariable(arg);\n\n                  if (variable !== null) {\n                    args.push(variable);\n                  } else {\n                    console.log('unsupported value:', arg);\n                    args.push('null');\n                  }\n                }\n              }\n\n              var text = 'gl.' + key + '(' + args.join(', ') + ');';\n              var variable = getVariable(result);\n              if (variable !== null) text = variable + ' = ' + text;\n              trace.push('  ' + text);\n              return result;\n            };\n          }(key, value);\n        } else {\n          fakeContext[key] = value;\n        }\n      }\n\n      return fakeContext;\n    }\n\n    return context;\n  };\n\n  countFrames();\n}();</script>\n  <link rel=\"stylesheet\" href=\"/d4042889d4f4c22ae38b868e302ca0b1.css\">\n  <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/14e882d3bf96f36922a4faba43b30f10.png\">\n  <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/7181b75b553f3a5273f64c28442c5440.png\">\n</head>\n\n<body>\n  <script src=\"/2b917a04a457094782231433ea40b203.js\"></script>\n</body>\n\n</html>"},"sourceMaps":null,"error":null,"hash":"9f34613c0a21b6a8e8058206a737921a","cacheData":{"env":{}}}