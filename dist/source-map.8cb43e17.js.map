{"version":3,"sources":["../node_modules/source-map/lib/base64.js","../node_modules/source-map/lib/base64-vlq.js","../node_modules/source-map/lib/util.js","../node_modules/source-map/lib/array-set.js","../node_modules/source-map/lib/mapping-list.js","../node_modules/source-map/lib/source-map-generator.js","../node_modules/source-map/lib/binary-search.js","../node_modules/source-map/lib/quick-sort.js","../node_modules/source-map/lib/source-map-consumer.js","../node_modules/source-map/lib/source-node.js","../node_modules/source-map/source-map.js"],"names":["intToCharMap","split","exports","encode","number","length","TypeError","decode","charCode","bigA","bigZ","littleA","littleZ","zero","nine","plus","slash","littleOffset","numberOffset","base64","require","VLQ_BASE_SHIFT","VLQ_BASE","VLQ_BASE_MASK","VLQ_CONTINUATION_BIT","toVLQSigned","aValue","fromVLQSigned","isNegative","shifted","base64VLQ_encode","encoded","digit","vlq","base64VLQ_decode","aStr","aIndex","aOutParam","strLen","result","shift","continuation","Error","charCodeAt","charAt","value","rest","getArg","aArgs","aName","aDefaultValue","arguments","urlRegexp","dataUrlRegexp","urlParse","aUrl","match","scheme","auth","host","port","path","urlGenerate","aParsedUrl","url","normalize","aPath","isAbsolute","parts","part","up","i","splice","join","aRoot","aPathUrl","aRootUrl","joined","replace","test","relative","level","indexOf","index","lastIndexOf","slice","Array","substr","supportsNullProto","obj","Object","create","identity","s","toSetString","isProtoString","fromSetString","compareByOriginalPositions","mappingA","mappingB","onlyCompareOriginal","cmp","strcmp","source","originalLine","originalColumn","generatedColumn","generatedLine","name","compareByGeneratedPositionsDeflated","onlyCompareGenerated","aStr1","aStr2","compareByGeneratedPositionsInflated","parseSourceMapInput","str","JSON","parse","computeSourceURL","sourceRoot","sourceURL","sourceMapURL","parsed","substring","util","has","prototype","hasOwnProperty","hasNativeMap","Map","ArraySet","_array","_set","fromArray","ArraySet_fromArray","aArray","aAllowDuplicates","set","len","add","size","ArraySet_size","getOwnPropertyNames","ArraySet_add","sStr","isDuplicate","call","idx","push","ArraySet_has","ArraySet_indexOf","get","at","ArraySet_at","aIdx","toArray","ArraySet_toArray","generatedPositionAfter","lineA","lineB","columnA","columnB","MappingList","_sorted","_last","unsortedForEach","MappingList_forEach","aCallback","aThisArg","forEach","MappingList_add","aMapping","MappingList_toArray","sort","base64VLQ","SourceMapGenerator","_file","_sourceRoot","_skipValidation","_sources","_names","_mappings","_sourcesContents","_version","fromSourceMap","SourceMapGenerator_fromSourceMap","aSourceMapConsumer","generator","file","eachMapping","mapping","newMapping","generated","line","column","original","addMapping","sources","sourceFile","sourceRelative","content","sourceContentFor","setSourceContent","SourceMapGenerator_addMapping","_validateMapping","String","SourceMapGenerator_setSourceContent","aSourceFile","aSourceContent","keys","applySourceMap","SourceMapGenerator_applySourceMap","aSourceMapPath","newSources","newNames","originalPositionFor","SourceMapGenerator_validateMapping","aGenerated","aOriginal","aSource","stringify","_serializeMappings","SourceMapGenerator_serializeMappings","previousGeneratedColumn","previousGeneratedLine","previousOriginalColumn","previousOriginalLine","previousName","previousSource","next","nameIdx","sourceIdx","mappings","_generateSourcesContent","SourceMapGenerator_generateSourcesContent","aSources","aSourceRoot","map","key","toJSON","SourceMapGenerator_toJSON","version","names","sourcesContent","toString","SourceMapGenerator_toString","GREATEST_LOWER_BOUND","LEAST_UPPER_BOUND","recursiveSearch","aLow","aHigh","aNeedle","aHaystack","aCompare","aBias","mid","Math","floor","search","swap","ary","x","y","temp","randomIntInRange","low","high","round","random","doQuickSort","comparator","p","r","pivotIndex","pivot","j","q","quickSort","binarySearch","SourceMapConsumer","aSourceMap","aSourceMapURL","sourceMap","sections","IndexedSourceMapConsumer","BasicSourceMapConsumer","__generatedMappings","defineProperty","configurable","enumerable","_parseMappings","__originalMappings","_charIsMappingSeparator","SourceMapConsumer_charIsMappingSeparator","c","SourceMapConsumer_parseMappings","GENERATED_ORDER","ORIGINAL_ORDER","SourceMapConsumer_eachMapping","aContext","aOrder","context","order","_generatedMappings","_originalMappings","_sourceMapURL","allGeneratedPositionsFor","SourceMapConsumer_allGeneratedPositionsFor","needle","_findSourceIndex","_findMapping","undefined","lastColumn","_absoluteSources","consumer","relativeSource","SourceMapConsumer_fromSourceMap","smc","generatedMappings","destGeneratedMappings","destOriginalMappings","srcMapping","destMapping","Mapping","cachedSegments","originalMappings","segment","end","SourceMapConsumer_findMapping","aMappings","aLineName","aColumnName","aComparator","computeColumnSpans","SourceMapConsumer_computeColumnSpans","nextMapping","lastGeneratedColumn","Infinity","SourceMapConsumer_originalPositionFor","hasContentsOfAllSources","BasicSourceMapConsumer_hasContentsOfAllSources","some","sc","SourceMapConsumer_sourceContentFor","nullOnMissing","fileUriAbsPath","generatedPositionFor","SourceMapConsumer_generatedPositionFor","lastOffset","_sections","offset","offsetLine","offsetColumn","generatedOffset","constructor","IndexedSourceMapConsumer_originalPositionFor","sectionIndex","section","bias","IndexedSourceMapConsumer_hasContentsOfAllSources","every","IndexedSourceMapConsumer_sourceContentFor","IndexedSourceMapConsumer_generatedPositionFor","generatedPosition","ret","IndexedSourceMapConsumer_parseMappings","sectionMappings","adjustedMapping","REGEX_NEWLINE","NEWLINE_CODE","isSourceNode","SourceNode","aLine","aColumn","aChunks","children","sourceContents","fromStringWithSourceMap","SourceNode_fromStringWithSourceMap","aGeneratedCode","aRelativePath","node","remainingLines","remainingLinesIndex","shiftNextLine","lineContents","getNextLine","newLine","lastGeneratedLine","lastMapping","addMappingWithCode","nextLine","code","SourceNode_add","aChunk","isArray","chunk","prepend","SourceNode_prepend","unshift","walk","SourceNode_walk","aFn","SourceNode_join","aSep","newChildren","replaceRight","SourceNode_replaceRight","aPattern","aReplacement","lastChild","SourceNode_setSourceContent","walkSourceContents","SourceNode_walkSourceContents","SourceNode_toString","toStringWithSourceMap","SourceNode_toStringWithSourceMap","sourceMappingActive","lastOriginalSource","lastOriginalLine","lastOriginalColumn","lastOriginalName","sourceContent"],"mappings":"AGAA,AFAA,ADAA,AMAA,AFAA,AGAA,ACAA,AHAA,AIAA,APAA,AQAA;;APCA,AFAA,ADAA,AMAA,AFAA,AGAA,ACAA,AHAA,AIAA,APAA;;;AQIAE,OAAO,CAAC6K,kBAAR,GAA6B3J,OAAO,CAAC,4BAAD,CAAP,CAAsC2J,kBAAnE;AACA7K,OAAO,CAACqR,iBAAR,GAA4BnQ,OAAO,CAAC,2BAAD,CAAP,CAAqCmQ,iBAAjE;APCA,AHAA,AMAArR,AFAA,AGAA,ACAA,AHAA,AIAA,ACAAA,IPAI0H,AHAA5H,AIAA4H,AIAAA,AHAAkD,AIAAC,GHAG,AIAA,CPAC,AGAAuE,AFAA,AIAA,AEAA6H,GPAG/V,ACAAA,AIAAA,EHAE,GLAG,AKAAA,EFAE,ACAA,AIAA,AEAlB,CPAmB,AHAA,AIAA,AIAA,EEAEA,CDAC,CJAC,CAAC,CIACA,ENAP,ACAA,AIAA,CLAlB,AGAA,AFAA,AIAA,AEA4B,CAAC,EJAE,CAA/B,AGAgC,CAAC,KJAV,CAAvB,SKA4B,CAAP,CAA6B+V,ODAlB,CAAP,CAAkCpM,CCA3D,iBDAA,STAsF9K,KAAnE,CAAyE,EAAzE,CAAnB;AAEA,AMDAC,AFCA,AGDA,ALDA,OICO,CAACqP,iBAAR,GAA4B,CAA5B;AHAA,AGEA,ACDA,ACDA,AHAA,AIAA,INAI1H,AKAAyJ,AHAA1J,AIAAA,GNAG,CEAC,AIAA,ENAElC,CEACtE,AIAAA,KNAK,AKAA,CLAC0G,CEAC,AIAA,CDAC1G,AHAA,AIAA,ONAT,AKAgB,CLAC2G,AKAA,AHAT,AIAA,CJAlB,AIAA,EAEA,WNFA,GKA0B,CAA1B;ALCA,AICA,AECA,INFIC,YAAY,GAAG,OAAOC,GAAP,KAAe,WAAlC;AAEA,AIAA,ACFA,AHAA,IGAIC,AHAAA,QGAQ,AHAA,GGAG9G,AHAAA,OGAO,AHAA,CGAC,AHAA,aGAD,AHAA,CGAP,AHAA,CGAuB8G,AHAAA,QGAtC,AHAA;ALGAhI,AOAA,OPAO,CAACC,MAAR,GAAiB,UAAUC,MAAV,EAAkB;AACjC,AOAF,ACHA,AHAA,AIEA,IDFI0K,AHAAZ,AIEA8M,ETCE,KAAK5W,EQHE,EHAE,CGACgB,CRGV,ASDW,CJFCA,EIEE,CTCChB,EQHE,CAAC,CHAC,CAAC,CLGC,ESD3B,CTC8BJ,CSC9B,ODJuB,CAAvB,GRG0C,AKHjB,CLGkBK,AKHzB,CAA0B6J,KLG1C,EAAiD,IKHnD;ALII,AIDJ,AGCA,AFFA,SDCSL,EJCE7J,YAAY,CAACI,MAAD,CAAnB,AIDJ,CAAgC8F,QAAhC,EAA0CC,QAA1C,EAAoD;AJEjD,AIDD,AGCF,ACJA,ACIA,IDJIkL,ACIA4F,SDJS,GAAG7V,ACIA,GAAG,EAAnB,EDJuB,ACMvB,CDNwB,cAAD,CAAP,CAAwBiQ,SAAxC;AJIE,AKGF,MLHMvH,KAAK,GAAG5D,QAAQ,CAACS,aAArB;AJCA,AIAA,AGCF,ACJA,ACMA,MLHMoD,EJAE,CQHCwH,EJGE,CJACjR,EIAE6F,OJAN,CAAc,AIAA,CAACQ,GIHvB,CAA2B6K,SJGzB,CIHF,EAAuCC,aAAvC,CRGqDrR,CQHC,KRG9C,CAAN;AGCF,AHAC,AIAC,AIHA,ANGF,CFLA,KIKM4J,AIHA0H,GLGGxJ,ADAAnF,IEAI,EIHE,ANGf,CEAgBmD,AFAAlD,CCAhB,CKHkBwO,ELGE,CDApB,EAAuBvO,CEAC,CAACyD,GIHvB,ANGF,EAA8BxD,UEA5B,GFAF,EAA6C;ACC3C,AHCF,AIDE,AKEF,APFE,IOEEgU,ELFEjN,AFAAhH,CCACkF,IDAI,ECAT,ACAW,EFAEnF,CCAC,ACAAmD,AKEA,ENFd,CMEiB,CPFjB,EAAoB,EEAE,CAACO,cKEzB,CLFE;ADCA,ACAA,AIJA,ACOF,APHI,MMJE,CLIC0B,ECAE2B,EDAP,ADAS/G,EMJEwO,CLICxJ,ACAA,EFAE,CEAC8B,AFAA7G,KEAR,AFAO,CMJV,ANIF,GCAsB,ACAA8G,EIJE,CLIC,ECAE,EDAE9B,ECAE6B,CDAN,AKJ3B,ELIwB,AKJY,EJIZ,CDAepE,GCAGuE,GDAG,CAACtE,GCAG,GDAV,CAAc,ACAAqE,IDAd,CAAvC,ECAO,IACApC,IAAI,CAACX,mCAAL,CAAyCf,QAAzC,EAAmDC,QAAnD,KAAgE,CADvE;ADCD,ACCA,AILGuL,ANID,GAFD,CMFEA,KNIK,IMJI,ANIAvO,GMJGyE,IAAI,CAACV,CNIC,CAAC7G,MAAV,KAAqB,CAAzB,EAA4B,GMJrB,CAAyBmR,UAAzB,CAAZ;ALMJ,ACCA,AING,ANIC,WAAOtO,aAAP;AIEJ,AJDG,GAFM,MIGAsM,AJDA,eICT,CAAyBC,IAAzB,EAA+BC,KAA/B,EAAsCC,OAAtC,EAA+CC,SAA/C,EAA0DC,QAA1D,EAAoEC,KAApE,EAA2E;AACzE,AELA,AHCF,AHGI,SMJK4B,AHCA3G,CHGC,IAAIrI,IMJI,CAACiP,ANIT,CAAU,MAAM1O,CMJjB,AHCT,CAA4BD,GGDG,ANIX,EGHpB,CHGkC,CMJzB,AHC0B,GGA7B,IAAI4O,mBNGA,CAAN,IMHE,CAA6BF,SAA7B,EAAwCD,aAAxC,CADG,GAEH,IAAII,sBAAJ,CAA2BH,SAA3B,EAAsCD,aAAtC,CAFJ;ARIFvR,AMEE,AEHD,AHDC,AHGC,MGHG,CLEC,AKFA8C,CLECzC,IKFN,ELEF,AKFc,GLEG,UAAUC,QAAV,EAAoB;AACnC,AMEA,ADJEwC,AHGH,IGHGA,ELEEvC,GKFG,CLEC,EKFE,CLEC,CKFT,CLEF,CADmC,CAChB;AGCrByH,AGEE,ACAF,ACHAqJ,AHDG,QFEK,CAAClJ,AIEA8H,IAAT,CAAcC,GAAd,ACHiB,CLCjB,AKDkB5E,CDGC6E,CAAnB,CJFqB,CIECC,CAAtB,EAAyB,KJFKhI,CKD9B,GAAkC,UAASkJ,ILCtB,CAA4BjJ,KKDf,CLCb,CKDkCkJ,CLCEjJ,YKDvB,EAAoC,ELCjD,EAAsD;AACzE,AHDA,AMGA,ACAA,ACHA,ANCFtI,MCAMuI,AHDA/H,AOGA6P,CLFC,CAACxN,CCAC,AKDA8O,CRAC,AOGA,EJFE,CHDC,AOGAzB,CLFb,CFDE,CGCclI,AHHqB,AOKrB,CPHK,AOGJmI,ALFAtN,CKED,CAAd,ILFF,CCAY,EAAV,KKD6B,CAACyI,aAAvB,CAAqCgG,UAArC,EAAiDC,aAAjD,CAAP;AFIA,AFDF,AGCErB,ACHD,AHFC,AHIF,CMJA,CDKEA,ELDEhN,CKCC,CAACiN,CAAD,AFLErF,CEKL,CHDOd,EGCEkG,CFLT,CHIW,CKCC,CAACE,AFLA1I,CEKD,ALDE,CKCd,EFLiB,CDInB,ACJoB7E,GDIG,GCJR,CAAYC,KAAZ,EAAmB,MAAnB,EAA2B,IAA3B,CAAb,iCHIF;ACDE,AHAA,AMGA,AFDA,AGCAoN,ACFF,AHHE,AHIF,EKCEA,ELDE/M,CKCC,CPHC1C,AOGA2P,CJHC,ACEAnI,AGCF,AFLE8C,CEKL,GJHS1G,AIGAgM,CJHC,CHAC,AIEX,EDFa,AIGb,CJHK,AHAS,AIEA,CFAC,CCFC7H,AHAhB,AIEA,ACJA,CLFmC,CAIhB,AEED,CCFC,AEFAd,GFEGW,CEFC,CAACxF,IFEI,CAAC1C,CEFV,CAAY2C,EHIjC,ECFE,CEFmB,CFEkBuB,CAAC,AEFA,GFEGmE,GAAzC,EAA8CnE,CAAC,EAA/C,CEFmB,CFEgC,CEFC,IAAjC,CAAnB;AFGEkE,AGGF,AFDA,AGCD,AFLC,IFEEA,GAAG,ACEA0B,ACJAe,CFECvC,GAAJ,CAAQJ,ECEV,GAAe,CDFC,CAAChE,CAAD,CAAd,ACEF,CAFqB,ACFrB,CFEqBiE,ACGrB,ECLuBZ,IAAI,CAAC7E,MAAL,CAAYC,EFEjC,GEFqB,EAAmB,gBAAnB,EAAqC,KAArC,CAAvB;AFGC,AHDD,AMIA,ACCF,AFNE,AHIF,MFHMpC,CKDCuK,EHIE7H,IFHI,EKDX,CLCc,CEGhB,CGJkB,AHIAC,CFHhB,CALmC,CAKhB,CKDC2E,AHItB,EAAwB,MGJN,EAAhB;ACMA,AFDA,ACJA,AIMF,APFE,MICI6H,AJDAvM,CEAC4G,ACJAgB,ECKE,AGCA+L,EPFE,CICCnH,AFDV,CCJA,CHIYzM,CEAC,CECC,ADLA,CCKC0M,CJDC,COElB,APFmBzM,CGJC0E,AIMAkP,EHDR,CAAW,CAAC1H,AJDV,COEd,APFyBtM,EOEEiU,CJNX,CCKa,CDL3B,ECK8B5H,EGChC,APFc,CAAZ,CICqB,AGCa9B,IHDI,CAA5B,EGCZ,EHD6C8B,AGCA6H,IHD3C,GGCF,EAAsDrU,KAAtD,EAA6D;ANJ3D,AHAA,AMIA,AFFc0D,ACHd,AIMA,ILHcA,EJFV9F,AMIAwF,CDLCgF,AIMAkM,ENLE9O,AGIA,CNJC,EGAR,AGIUoH,CNJC,EAAX,ASKA,CTZmC,AKMnC,CLCmB,AIEQ,CKGX,CLHa,ACHZ,CCKC,AFFY,AKG9B,CHDmBF,AFFN,ECHQzF,KCKH,EAAU0F,IDLX,EAAjB,GCKqC,CAACG,GAAD,CAAnB,EAA0B,IAA1B,CAAlB;AHHD,ACCkCrJ,AIDnC6K,AHDE,AIMA,APHA,CCRF,GCOmC7K,EFC7B,CGHC4E,AIMAkM,APHAhU,KAAL,EAAY,GMFG,CAACsE,CJCgC,EAAE,AKIlD,EJNA,CIMsB,EJNE,AIMxB,CDLF,CAA4ByD,EHD1B,MGCF,GAAuC,CAAvC,EAEA;ALAA,AHFE,AMIA,AFHa,AIEf,AHHC,AIMC,APHE,GEFF,GJDIzK,AMIAuF,CGEC4F,EHFE,CNJC,CSMR,APHS,EFHE,CMIC,AGEAmL,CTNZ,AMIA,AJDE,CFXiC,CAQhB,AMIJ,EGEE,IAAI,IAAT,GAAgB,IAAhB,GAAuBA,KAAnC;ARAF,AKDI,AFHH,AIED,ACGE,APHC,IDECjW,GQCG+K,GRDG,GAAG9K,AQCX,GAAciW,IRDI,CAAC,EQCE,IAAI,IRDP,AQCJ,CRDhB,EAEA,AQDkC,IAAlB,GAAyBA,OAAvC;AREF,ADPE,AMIE,AFFJ,AICA,AHHAtM,AIME,MTNIhK,CSMCwF,GTNG,CMICwJ,ENJE,ASMX,CHFE,CNJF,CAVmC,ASgBrBpC,CTNK,CKAH,CAAC7F,IIMI,IAAI,CJN3B,CAA6ByD,EIMb,GAAkB,GJNlC,CIMgB,EJNwB,CAAxC,AIMyCoC,OAAvC;AREF,AKHG,AEDH,AHFA,AIKE,APJA,GIDA,IGKK/G,EHDA,AJHE,EOIP,EHDSP,CGCGpD,EHDA,GAAG,AGCE,CHDZ,EAAa,CGCG,IAAT,GAAgB,IAAhB,GAAuBA,KAAnC;AREF,ADRE,AMME,AEFJ,ACGE,APJEQ,IAAAA,EFHEzC,CSOCkW,GPJG,CFHC,CEGC1T,EFHE,EAAZ,CAXmC,AEcpB,CFHI,AEGH,COIhB,APJe,CADR,GOKc,IAArB;AREF,AKFI,AEFJ,ACGE,APJEE,IAAAA,EOIE4T,EHDE5H,AJHA,EAAElM,GIGG,AGCA,EPJE,CIGCuM,AJHA,COIC,APJF,CAFN,CIKD,EGCN,CHDoB,CAAlB,AGCmB,EHDE,GGCGpH,GAAL,CAAS2O,OAAT;AREvB,ADRE,AMMI,ACDN,ACDA,ACGC,APJG3T,IAAAA,EFHE1C,EEGE,CKECuP,CLFChN,KAAK,CAAC,CAAD,CFHG,AEAT,GFAY,EAAnB,EOKF,CAA0BiN,GAA1B,EAA+BC,IAA/B,EAAqC;ANIrC,ADRE,AMMI,ACDJ,ACDF,ACIA,APLI9M,IAAAA,EFHE1C,EEGE,CKEC8O,CLFCxM,GIGGgM,ACDA,CAACmB,CLFC,CAAC,CAAD,CFHG,AEDT,CKMA,CAAWF,CPLC,EAAnB,AOKqB,CPnBc,CAgBnC,COGyBT,EDCC,CAACD,CCDE,CAACa,CDCJ,EAAMlB,GCDP,EDCC,EAAaC,ECDGe,IAAI,CDCpB,EAAsBd,ACDCa,GAAxB,CAAlB,CAAP,IDC0B,EAAiCZ,QAAjC,EAA2CC,KAA3C,CAAtB;AHJN5H,AFOA,AKFK,ACDJ,ACDD,ANDIrE,IAAAA,CIFgB,CAOhB,EHPI,ADEA,CCFCiE,CDECtE,KAAK,CAAC,CAAD,CCFf,CAAmBoF,IAAnB,GAA0B,SAASC,aAAT,GAAyB;AACjD,AFOF,ADPE,AMOE,ACFJ,ACFA,AHHAkC,AHJS,GAAP,GFIItK,GGAGuH,CHAC,IAAIxH,IKAI,CAACgL,EFAE,CHAf,EGAkB,EHAEhL,GGAG4H,GEA7B,CFAwB,CAAUQ,AHAA,CKChC,GFDmB,AHAiBlI,GGAGgF,CHAvC,EAA0C,AKCjC+F,GFDoC,CAAC3C,mBAAP,CAA2B,KAAKV,GECvE,CFDuC,AECGsD,EFDmCrL,MAA7E,UECA,EAA8D;AFA/D,AFOD,ADPI,AIAJ6J,AIGA,AHFI,AHCH,CCJD,KEGQ3C,KLDI/G,AIAD,CAACsH,ICCM,GLDE,AKCC4D,EDDrB,CJAuBjL,AIAD4J,IJAlB,WIAJ,ACCuC,CAAC9C,EDAtC,QCAE,CDAO+C,mBAAT,CAA6BC,SAA7B,EAAwCC,QAAxC,EAAkD;ADCpD,AFMA,ADPG,AICC,AIEJ,AHFI,GLpBiC,CAqBnC,EKDMmB,CDACxD,MAAL,CAAYsC,CCAC,GAAG,GDAhB,CAAoBF,ACAAQ,SDApB,EAA+BP,OCAf,CDAhB,ACAuC;ACKvC,AFJD,AIEH,AHFMoB,AHAN1L,CEHA,GCGM0L,GHAC,CIICkE,ADJE,AHAFxM,EGAIoI,GCIC,GJJb,CIIiBxL,EJJEoD,KIIK,CAACiM,EJJzB,CGA8B,CAAC3D,IADY,SCKvC,EAAwC;AACtC,AFHN,AICA,AHFMrE,IAAAA,SCIOmI,CDJG,EAAEnI,ECIA,GAAGqI,SAAS,CAACvP,MAAlB,GAA2BqP,KAA3B,GAAmC,CAAC,CAA3C;ALEN,ADNE,AMKG,AEFL,AHL2C,AHG3C,GGHoB,CJQhBrO,AIRA,CCKA,CNHEV,GECGmD,EIIE,ENLE,IAAItD,CCMC,ECLlB,CDKqB,ACLAuD,CDKrB,EAEA,CDRM,IAAuBvD,EEC7B,EAAiC,IFDI,IAAII,OAAvC,EAAgD;AAC9C,AMKE,AEFN,AHFI8K,AHAF,EGAEA,IHAE1H,GAAG,EFDGxD,CECA,CIICuP,CJJX,EIII,GNLc,CKCE,CAAClE,CLDAlL,OAAX,GAAqBM,AKC7B,CAA+B,UAAU6K,CLDzC,MKC+B,EAAmB;AJOtD,ADPG,AMKE,AEFL,AHFM,GLzB+B,CC+BjCxK,ADLF,IKDQyK,IJME,GAAG,GINK,EJMA1K,CING,aJMvB,EAEA;AKHG,AEFH,AHFQ2K,AIIRmL,APLE,GITK,GDUCnL,AHDFjI,GIMC,CGDG,CAAC0T,IJJM,CHDD,CGCG,AHDFhU,MAAf,EAAuB,SOKzB,GACE,SAASiU,kCAAT,CAA4CC,cAA5C,EAA4DjM,kBAA5D,EAAgFkM,aAAhF,EAA+F;ANNjG1P,AFSA,AKFI,AEHJ,AHFU+D,AIKN,APNAjI,IDQAzC,ACRAyC,GAAG,CCDC,AEEEiI,CFFDnE,EDCE/D,CGCG,EAAE+H,GJOC,CETjB,CAAmBnD,CFSCrH,CIPG,AHDF,CCDrB,AEEwBqF,AHDFlD,GCDG,GFSG,ACRjB,GDQoB,ACRA,CDQ/B,EETkCsF,AFWlC,ACVI,CGAe,WFDM,CAAsB5G,IAAtB,EAA4BqG,gBAA5B,EAA8C;AACrE,AHCA,AMME,AEHJ,AHFU0D,AIKN,APND,MCDGlD,AHCAnI,EMMEkP,ADLE7D,EFFA,AHCA,CMMC,EHPElE,CHCCxH,AMMAiP,ADLE,EAAE3D,ECKV,GAAa,CNNf,AMMF,CDLqB,CCKD,ADLEpF,CFFD,CHCClG,EGDE2B,IAAH,EHCS,CGDCyF,GHCG9G,CGDC,CAACgF,EHCtC,EAA0C,OGDT,CAAiB3D,IAAjB,CAAjC;AACA,AFUF,ADTI,AMME,AFNN+H,AIGA,AHLmB,AIQf,IRGA1I,EEVEyH,AMOE4O,IAAI,CTNArX,AIAD,CAACsH,CKMG,INPE,AMOEqP,ETNC,CGDAnP,CCCpB,CJAuBnH,AIAD8H,EHSE,CGTxB,CJAY,CCSerH,AQHZ,CLNa,CJAEJ,ASM1B,CAH6F,CAK7F,CNT4B,GAAG,AFUnC,EGTqCwJ,GDDG7C,CHCpC,EGD+B,CAAS1F,IAAT,CAAH,GAAoB0F,ACCxB,CAAyB8C,EDDE,CAACzB,IAAJ,CAAS,ACCjC,EAAmC,GDDGd,IAAd,EAAoBY,IAApB,CAAlD;AACA,AFWF,ADVG,AMMG,AFNJ,AIGF,AHPuB,AIYnB,APTFhF,EAAAA,CF5BmC,CA+BnC,CKNI,AHGD,CCACmF,ACCAU,GDDG,ADAA,GCAG,CGOC2F,AJPX,ICAerH,MAAL,CAAY9H,IGOI,AFNA,CEMCoP,AFNA,CDD3B,GGO0B,CFNMrF,CEMC2F,GAAP,CFNA,CEMYJ,CFNChF,MEMb,EAAqBiF,AFNrB,CAA1B,EAAkD,MEMxB,EAAgCC,QAAhC,EAA0CC,KAA1C,CAAtB;AACD,AFND,AIGJ,ACKI,KHPG,CAOH,GFRK1F,KAAL,GAAaO,QAAb;ADDF,AIKF,ACAA,AHFM,AIOF,APVF,MCAI,ADAA5G,CCACkF,CEGG6C,CEED+E,MFFQ,CAACtK,AHHF,CAAC7C,CCAX,EIKN,CAAqB0M,ALLnB,CCAoB5H,AEGZ,CHHa,CKKvB,EAA0BsI,AFFE,IAAtB,EAA4B,IEElC,EJLE,AIKoCC,CAAtC,CJLwC,CIKCC,CAAzC,EAA4C;AJJxC,AHEF,AIDE,AGIF,ACAF,AHFQjF,AHHJ/H,IAAAA,EFEExD,AKCEuL,CHHD,ECAE5D,ACCAA,EFDEpE,GFEG,CGFV,ACCA,CDDYqF,ACCAA,ACEE,CAAC7C,CLDDxF,EGFd,ACCA,CDDiBoB,ACCAwI,AFDA,CFEnB,AEFoBjH,CGGd,CLDgB,CGFpB,CEGwBoI,AHHjB,GECP,AFDyB,GAAzB,CGG+B,CAACvF,MAA5B;AFFL,AHEC,AMMA,AFPD,AGID,ACAF,ACII,APTD,GEFD,GKWMuR,EHDAhI,CFPC,EJCE,EAAP,AMMS,IAAI5P,GGCK,GAAGyX,CHDD,CAACpI,YGCc,CAACtP,IHDpC,CGCqB,CHDmB,AGCE+W,aAArB,CAArB;ATND,AMMG,AFPF,AGIF,ACAF,AHHQ,AIOJ,GTzCiC,CAoCnC,ESKMe,GLRC5N,CCCG5C,GCMCwI,GAAP,AFPF,GAAe,CCCG,IDDlB,ACCsB,CIOC,GJPnB,AIOsB,CAA1B,CJP4B;AFF9B,AGSG,ACFH,ACDF,AHHUhE,AHHR,KIOE,CHPE,AIOAgF,ALPAhN,CCACkF,AIOA,CFJG8C,EEIAiF,CDEC,ACFT,EAAW,GLPG,CAACrN,CCAf,AEGkB,CAAC4C,CFHD,CDAlB,EAAqB,EGGb,GAAoBqB,IAAI,CAAC5C,QAAL,CAAcuC,UAAd,EAA0BwE,UAAU,CAACxF,MAArC,CAApB;AFFN,AFYJ,AKHM,AFRF,AGMA,AFJK,AIML,APTAvC,IAAAA,EOSIgU,CPTD,CCAChQ,CFYCvG,AGXA0G,EFDEpE,EISE0L,EFRT,CAAYrG,CEQC,EGAI,CNTjB,AFYJ,AKHoB,AFRhB,CHWiB1H,AKHR,AFRQiJ,AFDA,CCAC,AMSE,APTFhH,EISE,CAAC,CAAZ,AJTT,CDYJ,EAA6B,AKHA8L,AFRzB,IEQE,CGA6B;ANR7B,AFYJ,ADTA,AMMG,AFRF,AGMC,ACDJ8B,ACGM,APTH,MFGG/Q,ESMIyX,CRGDvW,EEZE0G,GHGG,CGHR,AFYS,CEZCK,CKMC,CPMC,ADTAzH,AQGA8G,CLNZ,AFYG,CEZW3F,AMSE,ERIhB,CAAE,ADVN,ASMuB+V,CNTnB,AFaGxW,CDVgB,CGHCyH,CKM1B,CAA4B2I,CLNtB,CFaC,IAAa,AQJgB,CRI9B,CQJA,CAD6B,CAE7B,CRGmB,CADhB,GAEH,CAACpQ,GORP,GPQa,AORqC,IPQjC,AORjB,CPQM,IAAgB,CAFpB;AEXG,AFcJ,ADXG,AMMD,AFRF,AGMG,ACDJgE,AHHQqG,CDVR,IDKI,CKQE,AHHEA,CGGDgG,ILNI,AHGA,EAAP,GKAc,CAAC5F,IGGnB,CAAsBoF,GHHd,GAAsB,WGGS,CAACzJ,SAAxC,EAAmD,oBAAnD,EAAyE;ALLnE,AFeN,ADZG,AMMF,AFPD,AGKI,ACDFkK,AHHQ/F,AIMJ,APVJ,EMOA+F,CR1CmC,CAyCnC,EENIjO,EGIIkI,AIMAkM,GNTC/P,CEGG,EGGA,AHHE0D,CFHV,AMSW,CNTD9C,AKMA,ANPA,CAACpF,COUGsU,ENTd,AKKmE,CHFlD,AHJrB,CGIsB1R,CHJD,CCCC2C,GAAlB,EMSyB,KJPD,CIOO,EAA/B;ANRD,AGUL,ACHI,ACDF8I,AHHQ/F,AIMJ,APVFlI,EMOFiO,ENPEjO,GAAG,CGIGkI,GIMG+L,APVF,CMOC,EAAE,AHHE,EAAEnM,CHJD/H,CMKwD,KHDhD,AIMA,CJNC0C,EIME0R,CPVD,CAACvU,IAAxB,COUE;ANRH,AIOC,ACDF2F,AHN4B,AHD3B,EMODA,GAAG,EAAE,AHNC,YGMW;ALLlB,AHGC,AOIE,ACDA,ACGE,CNvBN,OKoBQ,CRHC,AQGA,CRHC,CAAR,ESMa2O,CDHDpG,UCGR,GAAuB,MDHzB,EAA+B;ALJnC,AHEC,AOIG,ACDE,AHHE,AIMA,APXN,CFtCF,KEsCM/N,IGKM+H,CGGDoG,ECGI6F,GPXC,CGKG,AHLFlU,CGKG+C,GHLlB,CGKU,CHLW,EMQjB,CAAoB,AHHE,IAApB,CGGuByE,CHHG,AIMA,GAAGyM,KDH/B,EAAoC,KAAKvQ,ECGI,CAAClH,MAArC,CDHT,ECIMyX,cAAc,CAACC,mBAAmB,EAApB,CADX,GACqCxE,SAD5C;AFAJ,ACFC,AHHKxH,AIOH,APZH/H,IAAAA,GAAG,CGKG+H,GHLChI,OGKS,CAAC6C,EHLA,CAAC/C,CGKZ,GAAkBiI,AHLxB,OGK+B,CAAClF,IAA1B;AEMN,AFLK,AIOJ,APZF,GOEC,CAX6F,CAuB7F;AFHA,ACFA,AHHG,QEKCqK,GCFG,KAAKa,EDEE,GAAGtB,cCFjB,EDEiC,CAACO,CAAD,EAAIC,CAAJ,CAAjC;ANMJ,AMLI,ACFD,ANTD,QKWMzM,CNKC5C,AMLA,ALXAqC,GKWG+M,ALXV,CKWW,GAAG,CAAZ,KNKJ,CAAuBrP,MAAvB,EAA+B;AAC7B,AMJEyO,ACbqE,AHOnExE,AIOF,APbH,CMDD,GDaIwE,AFNExE,EJUA/J,AQHEwW,EFDA,CAAChI,GAAD,CFNO,CEMDa,AFNE7E,EJUA,GAAG,CAAC1K,GQHK,CFDjB,AFNF,CAAqBqK,CJUD,AMJAiF,AECE,CFDpB,AECJ,CFDA,CNIyB,CAAV,KIVb,CJU8B,CAAlC;AACA,AMJE,ACFJO,AHJK,AIMD,GJ/BA,GJmCE1P,AQJyBmT,EFAvB9D,KNIK,AMJA,GNIGxP,AMJA0O,CCFC,CAACtI,CDEC,CAACkJ,CAAD,CNIG,AMJlB,CAhBS,CAkBT,CEF8C,CRIxB,CAAxB,AONF,CAA4BmB,ACEyB,CAAjD,CAxB6F,CA0B7F,eDJJ,GAAiD,IAAjD;ALPAjK,AFcE,AGbFgC,AGWI,ACJJxE,AHJIgG,AIQA,APfJxL,EGOIwL,IGIE,CAACqG,ANXA,CCGC,ADHAjO,CCGCgE,AFcAlG,EGbE,CAACkG,MDDZ,CAAmBD,AFcA,ACjBnB,CGOsB,CDHtB,AIOA,AHJuBwE,CFJvB,AFeM,AGdgB1C,AIOA4H,ANXAzN,CDkBfjC,EEfkB,GEIrB,CDHJ,ACG+B4I,CJUZ,EGba,CHe1B5I,ACnBN,CCGkCwH,EEI9B,CAAmC,EGIA,CPMrC,AONsCvB,CJPC8C,KDDhB,CAAsBzI,AEIEmK,EGIjD,ELRyB,AKQ0B,ELRE,IEId,EAAsB,CDH7B,GAA+B,OIO/D,EAAwE;ALPtE,AFgBD,AGfC,AGWE,ACJF0F,AHJI,AIQF,APdJ,EMUEA,ILRIhK,ACCA,CAAC,CCGGuE,IDHEpC,EIOE,EAAE,ELRd,CCCA,CDDkB,AKOoD,CJNnD,CCGG,GAAGmC,UAArB;AFHF,AFiBJ,AGhBI,AGWA,ACJF2F,EAAAA,OJPO9J,EDDE,CKQC,EAAE,CJPV,CDDYC,ACCAyC,EIKwD,ELN7D,ACCP,CDDiBhD,ACCAD,GDDV,CAAczF,ACCA,CAAC8E,GDDf,CAAP,+BCCA;ADAD,AIYC,ACJFsC,AHLI,AIQF,EDHFA,CLVA,EKUG,CCGG8O,CDHD,CHLG9Q,CFHD,QMWU,CJRC,CGKD,CCGG,GJRG,CIQrB,GJRE,EAAyB;AFF3B,ACAA,AGYA,ACJA,AHLIgF,AISJb,EAAAA,IJTIa,EFHAvD,AKQA,CJRCmB,AIQA,GLRG,EKQEgI,CLRCvK,CCAX,GDAe,ACAA,CDAC9B,AEGE,AISA,CAAC+F,ELZnB,ACGqBjE,IAAI,CAAC5C,GFHf,CAAiB7C,AKQ5B,ACIA,CAA+B,CDJD,ELRnB,AEGU,CFHrB,AEGmCoF,MISMuE,IJTpB,EAA0BQ,CIShB,EAAmB,OJT7B,CAAjB;AFFJ,ACAD,AIQG,AHLC,AISD,QAAI+L,GNZCxQ,AKQAqK,GLRG,CAAChJ,IAAJ,AMYU,CNZD,IMYM,CNZDd,AKQnB,CAAoB,ECIpB,CNZK,CMYqB,CNZDY,AKQAqC,ILRpB,CAAP,IKQE,EAAoC,KAAK9D,UAAzC;ALPH,AIWC,ACHC,ACIG,SFDC,IAAI4J,CAAC,GAAGJ,CAAb,EAAgBI,CAAC,GAAGH,CAApB,EAAuBG,CAAC,EAAxB,EAA4B;AJV/B,AFeDjR,AGhBE,AGYI,AFRA,AISE,CNnBR,MFsBO,CAACC,AIZE,CDJD,ACIEwL,CEQDmF,INIV,AGhBc3I,GHgBG,CIZG,CAACgD,CDJnB,AGYkB,CAACiF,GAAG,CAACe,CNICrP,AMJF,CAAJ,AFRT,CAAmB+F,CEQDqJ,EFRlB,CAAuB3E,EEQd,CAAV,IAA6B,CAAjC,ENIW,AMJyB,CNIC7K,GIZhC,CAAL,EJYW,AIZkC,EJYA;AEbnD,AFcE,AGhBD,AGYO6C,ACHJ,AHLIoH,AISA,CLnBR,KHsBM5J,AIZE4J,EEQApH,CAAC,CECG6T,CDJD,EPOE,AMJA,CAAL,CFRS,CJYD,AOPAjG,AHLEhH,EJYhB,MIZM,CAAmBxC,EISE,CJTrB,CAAuB4D,CISCT,IDJ5B,GCImC,CAACnF,KJThC,QISA,EAA+C;ARIrD,AMJMwJ,ACHL,AHLI,AISG,MRGJnO,EMJEmO,GNIN,CMJU,CAACC,GAAD,EAAM7L,CAAN,EAAS4M,CAAT,CAAJ;ANMN,AKPFjR,AFVAA,AGYO,ACbiE,ACc9DoY,CDdV,KPkBMrW,CKPC,AFVA,CEUCiO,AFVAhG,AKaEoO,CRID,GAAG7W,EKPZ,GAAiB,EFVjB,GAAsByI,CHiBC,CAACxI,EKPEwO,AGGE,CAACmI,GRIN,CAArB,CKPe,CAAgB1I,AFVjC,KKa4B,EHHX,AGGyBqI,EHHApI,SAAzB,EAAoCC,AGGE,EAA3B,CAAlB,KHHO,EAA8CC,KAA9C,EAAqD;AACpE,ACEG,AFRC,AISIsI,MHHJxI,EDNIpD,AISA4L,OHHK,ADNE,CCMD/X,EDNIqL,ICMd,GGGqB,EHHA,CAAzB,EAA4B,MDNQ,CAACe,gBAAnB,CAAoCH,UAApC,CAAd;AJcJ,AKPE,AEDJiF,ACIUyD,KRIL,GQJKA,GHHC,CAAC,CAAR,IEDa,CAAClN,SAAlB,ACI6B,CDJDsK,ECII,CAAtB,CAJ6C,CAK7C,kBDLV,GACE,SAASC,wCAAT,CAAkDlQ,IAAlD,EAAwDgD,KAAxD,EAA+D;APQ7DnD,AKPD,ACECmO,ACFA,AHPE,AIWG,APhBT,IDmBInO,AMLAmO,ECFImC,CAAC,ACFD,CFIA,AFTE9F,CJcD,AMLA4D,ALdAnM,CMYG9B,EPOAF,AMLJ,CEEO,CFFDsC,ACFE,CPOD,AMLA,ACFE3B,AHPA,GJcCrB,AMLA,ALdlB,CKcQ,AFTa,AHLF2C,EKcEiN,ACFT,CDEJ,ACFgBhM,CDEpB,AFTE,CHLN,CGK2B,CHLD,CMYd,CAAR,GPOA;AACAlD,AMLA,ACFA,AHPI0J,AIWE,APhBR,IDmBE1J,EIdI0J,AHLF9H,CDmBC,CMLCuN,CAAC,ACFEkB,CAAC,ANZF,EKcE/N,CNKClD,AMLA,ALdA6C,EMYI,AHPA,CESD,AFTEwI,CESd,CAhCS,AC8BF,ANZT,CKgBE,GCJoB4F,CAAC,IPOrB,COP0B,GAA1B,CHPI,CAA2BhG,UAA3B,EAAuCE,OAAvC;AFFRtE,AGUE,AEAC,AHPI,AIWG,APhBR,CMQF,KFIM/C,AJZAnB,ECEE,CAAC8D,ADFA,EIYE,CJZCxE,EIYEkM,IHVd,CAAmBtK,CDFC,CAAChB,KCErB,ADFoB,CAAlB,ECE2B,AGUA,CAAC,CAAC,CAAF,EAAK0L,IHVItG,KGUK,CAACjJ,MAAf,EAAuBsP,EHVvB,CAA0BxN,IAA1B,AGUA,EHVgC,AGUAyN,SAAhC,EACCC,QADD,EACWC,KAAK,IAAI5P,OAAO,CAACoP,oBAD5B,CAA3B;AHTA,AFgBE,AMFAuB,ACHJ,AHRK,AIWK,GJzBN,CEyBAA,EJdE7I,EFgBE/F,GAAG,GAAG,CAAV,AMFW,CAACmO,CNEC,CEhBf,CIca,CJdK,CIcCU,UAAN,EAAkBC,CAAlB,EAAqBK,CAAC,GAAG,CAAzB,CAAX;AJbA,AFgBE,AKNJ,ACIEP,AFXA,AIWM,APjBR,IKiBEA,EDJE1L,AJbAnB,ECGEmF,CEGGwC,AHNT,ECGS,AGUA,AJbA,COiBG4M,ENdA,AGUA,CAAZ,ACIa,CAACnI,CDJC,CDPb,CFHehI,AIcJ,CEAO,CFAD0I,EJdP,AMcWgH,CNdDvO,GAAV,CAAcpH,GIcb,CJdD,CAAV,AIc6BiP,CAAC,GAAG,AEAE,CFAxB,AEAyB2G,EFAA/G,CAAzB,CAAX,eEAmC,CAAd,IAAuC,EAAtD;ARGJ,AKNF,ACID,AFXA,AIWO,APjBN,CG3CJ,OH2CQ,CAAChN,EIaE,CAAC,AGIEwU,APjBF,CIaR,AJbS3U,GOiBK,CPjBd,EOiBiB0U,APjBF,QOiBU,CAAChT,MAAT,CAAgB,CAAhB,EAAmBuG,OAAO,CAACpF,eAAR,GACAsO,mBADnB,CAAX;ANdN,AFiBEhT,AKNH,ACIF,AFVD,AIWU8V,APlBJ,GIIgE,CAWpE,ELII9V,EEjBEmH,AMgBE2O,GNhBC,AFiBA,ECnBE5T,ECEE,AFiBA1C,CEjBX,EAAc,ADFZ,IOkBkB,CAACuW,YRCnB,OQDkB,CAAd,GAAsCQ,QAAQ,CAAChT,MAAT,CAAgBuG,OAAO,CAACpF,eAAR,GAClBsO,mBADE,CAAtC;ANfF,AFiBH,AKJH,ACGF,AECUA,APnBL,QOmBKA,KNjBK7L,GAAP,WMiBqB,GAAG2C,OAAO,CAACpF,eAA9B;ANhBL,AGaH,AGIQ4R,QAAAA,kBAAkB,CAACD,WAAD,EAAcG,IAAd,CAAlB,CAVK,CAWL;ANjBP,AFgBCzW,ACnBA8B,GCFF,CFqBE9B,ACnBA8B,IAAI,CCGC,EFgBE,ACnBAG,GAAG,CDmBC7C,ACnBA0C,IAAX,EDmBiB,CAAC1D,MAAP,CAAc6B,KAAd,CAAX;AEfA,AFgBD,AONHuP,ACOU8G,APpBP,GDUD,KEPMrP,AMiBEqP,GRDCpW,CEhBC,EFgBE,CEhBC2F,EFgBE,AONA,CPHf,AOGgBE,CLVC,AMiBE,CNjBDhC,EMiBIgG,KDPxB,CAA4BoG,CCOlB,ENjBK,CAAiB/P,IAAjB,CAAX,KKUJ,GACE,SAASoQ,+BAAT,CAAyCpQ,IAAzC,EAA+CyM,WAA/C,EAA4D;AFC5D,AEAE,ACMM,QDNA,CFADzJ,GEAKzC,EFAA,GAAG,AEAP,CFAD,AEAW,IFAE,CAApB,EAAuB,mCEAf,CAAN;ALXA,AFiBF,AKLE,AEAD,ACMM,APrBP,CMYF,KNZMyB,ECGE0D,AGYAgI,CLKC9N,EEjBE,CAACmH,IAAJ,AFiBN,AKLc,AJfA,CCGC,AGYA0G,EJfE1P,GCGGkI,IAAd,AGYkB,AJfA,CIeCjD,AJfAhB,CCGC6E,IAApB,AGYkB,CHZtB,AGYY,EHZmB,AGYA4G,EJfhB,CAAmB/L,IAAnB,CAAjB,CIe0C,CAACsB,KAAK,GAAG,CAAT,CAA5B,EAAyC,IAAzC,CAAR,KAA2D,CAA/D,EAAkE;AHXhE,AFiBL,AKLK,AGMC,APpBL,CDCF,IQNsD,CA0BhD,APrBAf,KAAK,ECEE,CDFCP,ICEIuE,ADFA,CAACnI,GCEN,CAAU+I,CDFT,CAAW,ECEZ,CAAP,EDFQ,CAAZ;ACGG,AFkBL,AKNK,AEALuI,ACOM,iBDPW,CAACiB,eAAlB,GAAoC,CAApC;ALXG,AKYHjB,ACOM,APtBJ,OAAK,IAAIlN,IAAJ,EMeU,ANfAC,CMeCmO,CNfC,GAAG,CAAf,EAAkBlO,CAAC,GAAGH,GMe7B,ENfkC,CMeC,ANfA/D,CMenC,KNf6B,GAAe,CAA1C,EAA6CkE,CAAC,IAAI,CAAlD,EAAqDA,CAAC,EAAtD,EAA0D;AIexD,AEEJgN,ANhBIlN,IAAAA,EIcEc,EJdE,GIcJ,AJdOf,KAAK,CMgBC,ANhBAG,CMgBC+K,ANhBF,CAAZ,mBMgBJ,GAAyC,CAAzC;ALZE,AGWC,ACIHpP,ACFAqR,ODEO,CJfC,AIeAF,IJfI3O,KAAJ,AIeR,ACFiB,CLbC,AKaA6M,EDEE,IJfIpN,IAAN,EIeYiO,CJfC,EIeX,EAAeU,ACFnC,GAAsC,CAAtC,MDEoB,EAA2B,MJfvC,CAAN;AACD,AIeCD,ACDF,AHVA9F,AIaM,APrBF,CCVJ,CI6BE8F,MLnBMxM,GOqBK+T,CPrBD,CKmBC,CAAChI,GAAD,ALnBI,CGQC,CEWCU,AFXAhJ,CHRf,EAAkB,MGQtB,AIa8B,CFFjB,AFXgBsE,EEWE,AEEEN,CFFpB,EAAqBsE,GAAG,CAAC/P,AEEE,CJbxC,AIayCsG,GJZvC,EEUgC,GAAa,CAAlC,CAAX,EFVSgG,CIYL,EAAkD,0BJZtD,CAAuC3J,KAAvC,EAA8C;AFHhD,AGUE,ACID,AFVG,AIYI6U,APrBFzT,CKiBN,KFRQ4H,AIYA6L,APrBFzT,GIeGe,CGMG,CAACwD,APrBF,CAACnE,EIeV,AGMM,CJZS,AIYAwT,GJZGpQ,AHTd,CAAarD,CAAb,EGSkB,AHTF,CGSGxB,AHTnB,KOqBwB,CJZV,CAAYC,AIYxB,KJZY,EAAmB,WAAnB,CAAhB;AJYJ9C,AKLC,ADNG,AIYIkY,APrBH,CIPL,IJKI,CGWIjM,AIYAiM,CRDD,CAAC7X,GCpBG,GDoBX,AIXgB,CHTD8D,EDoBE,AIXEuD,EHTA,EGSI,CAAC7E,CIYC,CPrBD,EDoBEb,EIXP,AHTR,CGSoBc,CHTD,IGSX,EAAmB,MJWrB,CAA0Bb,GIXxB,CJWF,CIXiC,CJWDC,GIX9B,CAAf,EJWa,EAAwCC,SAAxC,EAAmD;AAClE,AIXE,AIYG,APrBDiC,MDoBAhC,AIXEiE,AHTFjC,EAAE,IDoBI,AIXE,GJWCnC,AIXEyF,IJWE,AIXE,CJWDvH,AIXE0C,MJWpB,AIXe,CAAYC,KAAZ,EAAmB,QAAnB,EAA6B,IAA7B,CAAb;AJYF,AIXE,AHTC,KAFM,CDsBLT,AIXEqE,IAAI,CHTD,CDoBC,CIXGgB,EJWA,ACpBAtD,CDoBb,CIXiB,AHTF,CGSGvB,EHTA,CAAT,EAAY,CGSR,CAAYC,KAAZ,EAAmB,MAAnB,EAA2B,IAA3B,CAAX;AJYF,AQAI,APpBA,MDoBAR,EQAIwS,EPpBA3Q,CDoBC,GAAG,ACpBA,CDoBZ,ICpBiB,EAAb,EAAiB,IOoBM,GAAGyH,OAAO,CAACpF,eAAlC,EAAmD;ARCvD,AIXE,AIWI,APpBA,MDoBFjE,AIXE,CAAC,GIWG8V,EJXErN,MJWZ,AQAkB,ERAAlJ,CQAG8V,IRArB,EIXE,EAA2B,MIWM,CAACC,mBAAD,CAAd,IAAuC,EAAtD;AJVF,AIWEF,APpBA,MOoBAA,GJXGjL,CIWC,CAACjE,GAAL,CAAS4P,QAAQ,CAAChT,CJXpB,CAAsByG,IIWX,CAAgB,CAAhB,EAAmBF,CJX9B,EAAiCK,IIWI,CAACzF,GJXtC,EAA2CH,MAA3C,EAAmDK,EIWxC,CAAT,CJXF;AFLNsB,AFiBE,AIXG,AIWG4P,APpBA,KDoBH,CQAGA,ENjBA,CAAChQ,SAAT,CAAmB0B,CMiBG,CNjBtB,AMiBuBuO,GNjBC,SAAStO,OMiBX,CAAd,GNjBgB,AMiBsB8O,CNjBD7O,IAArB,EAA2B,CMiBG,CAACnE,MAAT,CAAgBuG,OAAO,CAACpF,eAAxB,CAAtC;ANhBN,AFiBE,AQAIsO,APpBA5Q,MCGFsF,AMiBEsL,ERAA5S,ACpBAgC,ECGE,GDHG,CCGC,AFiBA,ACpBAI,CCGR,GFiBYlC,CEjBCoH,CDHX,CAAanF,CAAC,CCGC,CFiBnB,CQAuB,APpBF,CCGC,AFiBA,ACpBlB,EOoBsBuH,APpBFxH,EAApB,CCGuB6D,IMiBM,CAACzB,CNjBZ,CAAYrG,MAApC,EAA4C,KMiBtC;ANhBJ,AFiBE,AIXF,AIWG,APpBCiE,MGSAiC,EHTAjC,EAAE,CCGC,CFiBC,AIXE,CHTD,CAAL,ECGQ6D,AFiBAzF,AIXE,IAAd,CJWQ,CEjBD,AFiBW,AIXE,CFNDgH,IAAZ,CAAP,sCFiBQ,CAAN;AEhBH,AFiBE,AIXCnD,AHTC,IGSDA,GHfA,GGeM,GAAGsG,AHTF,MGSQ,CAACtG,MAAD,CAAf;AIWA8R,APnBEjU,IOmBFiU,IPnBEjU,KAAK,CAACI,COmBG,GAAGsH,EPnBZ,CAAavH,CAAb,EAAgB,COmBlB,APnBE;ACGN,AFkBEvC,AIZE,AIWD,APnBGsC,GOrBJ,CRyCAtC,CQDG,GNjBC,AEME,AHRFsC,CDoBC,AIZE,AI7BP,CPqBM,COpDuF,CNsDrF5B,AFkBAvB,AQAR,EJZYgK,GFNR,CAAU,AFkBA,CAAC5K,GIZR,CAAcsH,EJYb,CAAc1F,AIZf,CAAkBoE,GJYC,CAAC5D,EIZpB,CAAL,EAAgC,KJYZ,CAAgBP,GElBGsH,GFkBG,CElBxC,CAAN,AFkBwB,CAAd,CAAR;AEjBH,AEMO,AHRD,CCHP,UEWayB,QAAL,CAAcxC,GAAd,CAAkBpC,MAAlB;AFJR,AFgBI,AIXG,AIWH,APnBC,MOmBGwR,ERAA/V,KAAK,KAAK,CAAC,CAAf,EAAkB,GQAK,GAAG8V,cAAc,CAACzX,MAAzC,EAAiD;ARC/C,AIXD,AIWC,APnBH,QOmBOgY,IRAE,IAAI3V,GQAV,ERAM,AQAW,CRAD,2BAA2BP,IAAI,CAACS,MAAL,CAAYR,MAAM,GAAG,CAArB,CAArC,CAAN;AACD,AOFLmP,ACEQ,iBDFS,CAACzJ,SAAlB,CAA4B+D,WAA5B,GACE,SAAS6G,6BAAT,CAAuCnI,SAAvC,EAAkDoI,QAAlD,EAA4DC,MAA5D,EAAoE;AAClE,AHVA,AIWI0F,APpBNzU,EAAAA,IMmBMgP,AHVAjM,AIWA0R,APpBF,GAAGlU,CGSG,GGUG,CHVC,AHTF,CAACK,CMmBGkO,EHVd,CHTK,CGSa,AHTF,GAAX,CMmBiB,ACCA,APpBxB,COoByB0F,GDDG,IAA1B,ICCsB,EAAcL,aAAa,EAA3B,CAAlB;ARCJvV,AODA,AHVEmE,AIWC,IRAHnE,AIXEmE,CIO+C,CDG7CkM,ACEF,EJZI,GGUG,AHVAjG,GGUG+F,EPCA,CIXG,CAAChM,CJWD,CAAC,AODE,EPCA5E,AIXH,CAAb,CGUoBuP,GPCC,GAAG/P,WODa,CAACgR,QPCxB,CAAhB,MODA;APEAxQ,AOAA,ANpBF,IDoBEA,EOAIwM,ANpBF3K,GDoBG,CCpBC,GDoBGtC,COAT,CNpBW,EAAb,EAAiB,ODoBf;AACAgB,AIZE,AHRFsB,IDoBAtB,ACpBAsB,IGQM,AHRF,CGQG,CJYD,CCpBCM,EDoBE5B,CIZG6I,KJYG,CIZR,CAAYvD,AHRF,EDoBE7F,CIZZ,AHRa,CGQG4E,EHRN,CDoBO,CIZjB,CAAL,AHRwB,EDoBEpE,AIZE,CHR9B,IDoBe,CAAf;AEjBJ0F,AFkBI1F,AODA,AHXI,AIWFqV,APnBH,IDoBCrV,AQDEqV,INjBE,AMiBE,CNjBD/P,AFkBA,AQDEa,CDACmK,CHXC1H,CIWP,CRCO/J,AQDEyW,EDAX,EHXI,CFNR,AEMoBnP,CFNDgB,EEMX,CAAgB/C,IFNxB,AEMQ,CJYJ,AQDyB,CAACpC,CNjBD,KMiBd,CAAsBuT,GNjBCnO,gBAAT,AMiBd,EAA2CnF,CNjBD,GMiB1C,CAAgD,EAAhD,CAAT;ANhBJ,AFkBC,AODC,AHXG,AIWF,GRbH,AQnE+F,CAkF7F,KNnBK,AKiBA8M,EPCE9O,GElBG0F,MAAL,CAAY9C,EFInB,GEJO,AKiBiB,CAACmN,CLjBzB,cKiBE;ALhBH,AKiBKhE,AHXD,AHRH,CCAF,KKmBMA,ANnBAxK,GAAJ,EAAS,GMmBG,GAAG,KAAK+O,kBAAhB;APEJ1Q,AODI,ANnBF2B,EDoBF3B,ECpBE2B,GAAG,CAACH,GDoBG,CAAChB,ACpBR,GAAWgB,EDoBb,ECpBE,CDoBgBlC,aAAa,CAACY,MAAD,CAA/B;AEjBFrC,AFkBEmC,AIZE,AIWAqJ,APnBA,EDoBFrJ,AQDEqJ,KNjBG,AEMEL,CFNDnD,GFkBG,ACpBApE,CDoBChB,IElBZ,AFkBE,AIZE,CAAe6F,EFNAT,AFkBA9F,CIZf,AIWkB,CJXC,AIWAiK,CPnBD,CAACrI,EDoBrB,CCpBoB,CCEtB,ADFI,COmBA,CAA2ByG,OAA3B,CAAmC,UAAU6B,UAAV,EAAsB;ARE5D,AOFG,AHVE3F,AIWA,APnBH,CDJH,GIYMA,IIWI6F,CDDD+E,MCCQ,EJXE,CIWC7F,CJXCM,OGUK,CAACyG,CHVG,CAACxG,IADR,GIYe,CAACQ,IDDnC,YCCgB,CAAoCH,UAApC,CAAd;ADAAkC,AHVA9H,IAAAA,EGUA8H,QAAQ,GAAG,EHVI,EAAExC,CGUDgH,QHVU,CAAC9G,MAFV,EGYjB;AACA,AHVA1F,AIUA,APnBJ,IGSIA,IIUIgG,CPnBD3I,IAAP,EOmBe,CJVC,EAAEsI,CIUC,IAAf,EAAqB,CJVC,IAAI,IAAZ,IAAoBA,QAAQ,CAACF,IAH1B;AAIjBxF,AIUE,APnBP,IGSKA,MIUMmR,QJVQ,EAAEzL,GIUG,IAAI,CJVC,GIUtB,CJV0B,CIUC,GJVb,IAAoBA,QAAQ,CAACD,MAJ5B;AGcnB,AHTE3F,AIUI+F,IJVJ/F,IIUI+F,EJVE,EAAE/F,MA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DPQ/D,ICOE,CAACtL,CDPG,GAAG,KCOjB,CAAqB+Q,OAArB,GAA+B,SAASC,kBAAT,CAA4BJ,MAA5B,EAAoC;ADN7DnS,ACOJ,AP/BA,IMwBIA,ECOAjB,AP/BAV,IMwBM,CCOD,CDPGgD,ACOF+Q,EP/BE,EMwBI,CAAC5V,CNxBD,CO+BZ,AP/Ba6B,CO+BC8T,GDPN,CAAY1V,ECOpB,CAAJ,AP/ByB,CAACW,CMwBd,ACOe,EDPI,CNxB3B,IAA8B,CAACiB,EMwBvB,CADG,KNvB4B,CAACf,IAA5C,EAAkD;AMyB9C2C,ACOF,AP/BA5B,IMwBE4B,ANxBF5B,KO+BK,GP/BG,CO+BCL,AP/BAZ,CO+BC,EDPI,CCOD+U,AP/Bb,CMwBgBzM,ENxBA/H,EMsBH,CCSM,CAAC7D,CP/BpB,KO+Ba,GAAc,CAA3B,EAA8BkE,CAAC,IAAI,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;ADNzCkC,ACOA,AP/BF,IMwBEA,OCOKoS,AP/BA/U,OMwBS,ACOd,CAAa4U,CDPG9Q,ENxBA,CAAChD,CMwBG,CAAC7B,ACOF,CAACwB,CAAD,CAAnB,GDPgB,ANxBA,CMwBYvB,ANxB9B,KMwBkB,EAAmB,QAAnB,EAA6B,CAA7B;AAHL,AHVjB+H,AIqBK,AP/BF,GMoBC,eHVc,CAACjD,SAAnB,CAA6BoF,cAA7B,GACE,SAASC,iCAAT,CAA2CzB,kBAA3C,EAA+DqB,WAA/D,EAA4EK,cAA5E,EAA4F;AGe1FgG,AHdA,AIoBD,EDNCA,CCEF,GJhBM9G,EGcE,CAAC/F,ACOJ,IAAImS,EDPP,CHdc,EGcE,CHdC3L,AIqBJ,CAACmK,GDPO7D,OHdrB,CAD0F,CAE1F,AIoBa,CAAN,IAAwB,EDPf,CAAsBD,ICOAsF,EDPM,CAACnS,GCOd,GDPf,CAAhB,CCOiD,QAA9C,EAAwD;AAC3D,APhCF,MAAI1B,GOgCG0S,GPhCG,GAAGrT,EOgCX,CAAc6U,EPhCE,CAACnW,IOgCjB,CAAsB8V,CPhCX,CAAa,CAAb,GOgCX,GPhC+B,GAApB,GACTxU,KADS,GAETD,SAAS,CAACS,KAAK,CAACI,OAAN,CAAc,MAAd,EAAsB,EAAtB,IAA4B,GAA5B,GAAkCZ,KAAnC,CAFb;AMyBE,AHbA,AIqBD,GAFI,GDNCkP,AHbArG,GIsBD,GDTO,CAACxG,IHbI,EGaX,EHbe,CGaC,CAApB,EAAuB,AHbvB,EAAyB;AGcvB,AHbA,AIsBF,AP/BF,MAAI3B,EGSI8G,EIsBA,CDTG,EAAP,CCSQpL,AP/BZ,EAAc,OO+BN,CACJ,EJvBsB,CAACsL,IAAnB,IAA2B,IAA/B,EAAqC,+DIuB2C8M,MAD5E,CAAN;ADRC,AHbG,AIwBL,APjCC9T,IAAAA,QGSU,AHTF,CAACf,GGSKnB,CHTd,GAAgBmC,CGSN,CACJ,IHVN,sFGWM,0DAFI,CAAN;AAID,AHZH,WAAOf,WAAW,CAACc,QAAD,CAAlB;AMuBA,ACUF,APhCC,MMsBK4J,GCUC,IAAP,CDVc,GAAG,EAAf;AHVElC,AIqBL,CAfD,GJNMA,UAAU,GAAGZ,kBAAkB,CAACE,IAAhC;AGYF,AHXC,AIsBL,APlCE,MMuBMzG,GNvBCN,EMuBI,GAAG,CNvBd,IMuBmByO,YAAL,CAAkBF,MAAlB,EACkB,KAAKJ,iBADvB,EAEkB,cAFlB,EAGkB,gBAHlB,EAIkBpL,IAAI,CAAC3B,0BAJvB,EAKkBqL,YAAY,CAAC/B,iBAL/B,CAAZ;ANtBH;AM4BG,AHhBA,MGgBIpK,AHhBAoC,KGgBK,IAAI,CAAb,AHhBc,EGgBE,CHhBC,KAAK0D,WAAtB,CAZ0F,CAa1F;AGgBE,AN5BN/K,OAAO,CM4BG4L,AN5BFrH,IAAR,GM4BiB,AN5BFA,GM4BK,CN5BpB,IM4ByBuO,iBAAL,CAAuB7N,KAAvB,CAAd;AHfF,MAAIoC,UAAU,IAAI,IAAlB,EAAwB;AGiBtB,AHhBA+E,AHZNpM,IGYMoM,GHZC,CM4BGtJ,AN5BFmB,KM4BO,CAAC+H,AHhBA,GAAGtE,CHZnB,EM4BU,CHhBa,AHZF,CGYG5C,GGgBGuO,KHhBR,CAAchM,AHZFrD,GM4BzB,EAAgC,AN5BjB,EAAiB,GGYnB,EAA0BoI,UAA1B,CAAb;AGiBE,AHhBH,AHZH,GGJ4F,CAiB1F,KHbKpI,CM4BGsC,IN5BE,CAAC5D,MAAN,CM4Be,AN5BF,CAAb,EM4BkBkJ,IN5BE,GM4BK,AN5BzB,CM4B0BtF,GN5BCpD,SM4B5B,AN5BqC,CM2BP,AN3BQ2B,CM8BtC,GN9B4B,CAAeb,KAAf,CAAlC;AM+BM,AHjBJ,AHbH,CAFD;AMiCQ,AN7BR;AM8BQ,ACGRiT,UAAU,CAACrP,SAAX,CAAqBkR,IAArB,GAA4B,SAASC,eAAT,CAAyBC,GAAzB,EAA8B;AJrBtD,AIsBF,MJtBM7L,AIsBFuL,KAAJ,KJtBgB,GAAG,IAAI1Q,QAAJ,EAAjB;AGmBI,AHlBJ,MAAIoF,OGkBOxB,CHlBC,GAAG,GGkBG,CHlBC5D,GGkBG4D,KHlBP,EGkBc,AHlB7B,CGkB8BtF,AHtC4D,CAsB1F,WGgBsB,KAAyBA,YAA3C,EAAyD;AACvDgI,ACGR,OAAK,CDHGA,GCGCjK,CAAC,GAAG,CDHG,ACGX,CDHY6E,CCGDV,GDHR,ACGW,CDHG,ECGA,KAAK6O,QAAL,CAAclX,MAApC,EAA4CkE,CAAC,GAAGmE,GAAhD,EAAqDnE,CAAC,EAAtD,EAA0D;ADFhD0H,AHjBR,AIoBA2M,IAAAA,GJpBKvN,EIoBA,CDHGY,ECGA,EDHI,EAAErE,AHjBd,CAAeyC,AIoBFkN,GDHK,CAACxU,ICGX,CAAcwB,CDHR,ACGN,CDHkBuH,ACG1B,IJpBA,CAA+B,EGiBjB,EAAqB,MHjBMA,OAAV,EGiBjB,AHjBoC,EGiBE,IAAtC,CADM;AAEZI,AHjBN,QAAIJ,EGiBEI,KHjBK,CGiBC,AHjBA3F,EGiBEqB,IAAI,AHjBd,CGiBe7E,IHjBIuJ,EGiBT,CAAYR,OAAZ,AHjBV,EGiB+B,EHjBEA,OAAO,CAACtF,OGiB/B,EAAwC,GHjBjB,CGiBvB,CAFI,EHf2C,IAA7D,EAAmE;AGkB7DgN,AHjBJ,AImBJ,QAAIoF,EDFIpF,GCEC,CAAC0D,MDFQ,EAAEtP,IAAI,ACEf,CDFgB7E,ACEzB,EAAyB,IDFL,CAAY+I,OAAZ,EAAqB,qBAArB,EAA4C,IAA5C;AAHA,AHbhB,AImBF8M,APhCN,MOgCMA,GDNI,AN1BD5T,CGaGmH,CImBD,CAAC6M,IAAN,CAAWE,APhCjB,CGaoB,AHbFxU,EOgCZ,CJnBiBgH,EHbvB,EAAyBxH,KAAzB,EAAgC,OGaS,CAACqJ,mBAAnB,CAAuC;AGmBpDzB,AHlBAG,AImBL,APhCH,KO8BE,CP9BEvH,EM+BIoH,AHlBAG,GIoBD,APjCE,CGaG,EAAEH,CGkBC,CN/BD,EM+BI,AN/BlB,EAAkB,CGaG,CAACtF,CGkBCwM,WHnBqC,MGmB1C,CAAuB,EAAE7N,KAAzB,CAAV;AACD,AHlBC+G,AIoBJ,APjCFxH,IAAAA,IGaMwH,CHbD,COiCC0M,EPjCE,EGaI,CIoBD,APjCX,CGac9M,IIoBE,EAAd,CJpBmB,CAACrF,AIoBF;ADDjB,AHrBuD,AIuBtDyS,APjCL,KMeG,EHLiB,CAAf,AIuBAA,GDFK,ACEF,CAACN,KAAD,EAAQ;ADDX,ACCarS,UDDTE,ACCSF,MAAM,EAAE,KAAKA,CDDR,GAAGuF,ECCV,KDDiB,CAACrF,cAA7B,CADK,CAGL;AACA,AHrBA,AIoBawF,APhCnBvH,EAAAA,KAAK,GGYKyH,AIoBSF,APhCXvH,IOgCe,CPhCV,COgCY,APhCXI,EGYI,CAACyB,EIoBW0F,EPhCtB,CAAc,CGYZ,AImBO,IJnBY,AHZrB,EAAqB,EGYvB,AHZE,CAAR,CGYmC,AHjBL,CAO9B;AMgCM,AHrBE,AIoBWC,AP9BnB,UO8BmBA,MAAM,EAAE,KAAKA,MAFf;ADIX,AHrBEJ,AIoBWlF,AP9BnB,QGUQkF,EIoBWlF,IAAI,CJpBR,CAACL,AIoBS,KAAKK,CJpBtB,GAAiBuF,QAAQ,CAAC5F,MAA1B;AIiBS,AP1BjB,SO0BS,CAAH;ADKA,AHrBE,AIoBH,YJpBO6G,CGqBCtB,OAAO,IACPA,EHtBa,IAAI,CGsBV,CAACtF,EHtBb,EAA4B,QGsBvB,KAAyByF,IADzB,IAEAH,OAAO,CAACrF,cAAR,IAA0BA,cAFjC,EAEiD;AAC/C+H,AHvBE1C,AIoBP,AP9BH,MAAI7G,EMiCIuJ,EHvBE1C,CHVD,GAAG,CAAZ,CMiCgB,CAAC1C,AHvBA,CAAC7C,GGuBV,CAAc,EHvBZ,GAAiBqB,IAAI,CAACnD,IAAL,CAAU2I,cAAV,EAA0BtB,OAAO,CAACvF,MAAlC,CAAjB;AGwBA0F,AHvBD,AIoBR,UDGSA,IAAI,EAAErE,IAAI,CAAC7E,MAAL,CAAY+I,OAAZ,EAAqB,eAArB,EAAsC,IAAtC,CADM;AAEZI,ACHX,AP/BC,COeF,QPfShI,CMkCGgI,INlCE,CAAChH,CMkCG,EAAE0C,IAAI,ANlCf,CMkCgB7E,ANlCF2B,KAAK,CMkCR,CAAYoH,CNlCD,GAAtB,GMkCW,EAAqB,CNlCD,CAAtC,EAAyC,aMkCvB,EAAwC,IAAxC,CAFI;AAGZ0H,AHxBF,AIsBV,APhCI,QAAIrO,EMkCIqO,EHxBEjM,CHVD,GAAG7C,IMkCM,CNlCD,CMkCGkD,AHxBA,AHVFxC,IMkCM,AHxBA,CGwBCrC,GHxBnB,EAAwB,CGwBV,ANlCR,CMkCoB+I,ANlCF,GAAlB,CAAZ,GMkCoB,EAAqB,qBAArB,EAA4C,IAA5C;AAHA,AHpBZA,SGoBF,CHpBEA,OAAO,CAACvF,MAAR,GAAiBqB,IAAI,CAAC5C,QAAL,CAAcuC,UAAd,EAA0BuE,OAAO,CAACvF,MAAlC,CAAjB;AG0BFuF,AHzBC,AHXP,QMoCMA,ANpCF3G,KAAK,EMoCI,CNpCD,CAAZ,CMoCgB,CNpCD,IMoCM6N,iBAAL,CAAuB,EAAE7N,KAAzB,CAAV;AACD,ANpCH,aAAOjB,KAAP;AMqCC,AH1BG4H,AHVL,KAJsC,CAMvC,EGQMA,OAAO,CAACtF,YAAR,GAAuB2F,QAAQ,CAACF,IAAhC;AG2BL,AH1BKH,AHRN,QGQMA,OAAO,CAACrF,cAAR,GAAyB0F,QAAQ,CAACD,MAAlC;AHPN;AMmCA,AH3BM,SG2BCsC,GH3BGrC,KG2BV,GH3BkB,CAACvF,IAAT,IAAiB,IAArB,EAA2B;AG4BlC,AH3BSkF,AIsBZqL,CD/DA,SHyCYrL,AIsBF,CAAChE,MJtBQ,CAAClB,EIsBpB,CAAqBnC,CJtBT,GAAe0H,AIsB3B,GAA4B,KJtBO,CAACvF,GIsBCuS,CJtBzB,cIsBgB,CAAyBC,IAAzB,EAA+B;AJrBhD,AIsBT,AP/BE1U,IAAAA,EO+BE2U,GP/BG,GAAG3U,KO+BV,AP/Be,CAACW,KAAN,CAAY,CAAZ,EAAeF,KAAf,CAAR;AMqCJjF,AH3BS,AIsBP,MAAIqE,CDKC,ACLL,CDKMgN,iBAAR,GAA4BA,iBAA5B;AAEA,AH5BO,AIsBL,APhCE,MOgCE7I,EPhCEhE,COgCC,GAAG,CPhCC,CAAClB,GOgCG+T,EPhCT,CAAY,KOgCR,CAAclX,MAAxB,OPhCM,CAAJ,EAAsC;AACpC,aAAO6D,KAAP;AGWA,AIqBJ,AP/BG,MO+BCwE,EJrBInC,CIqBD,GAAG,CAAV,CJrBc,CIqBD,EJrBIuF,OAAO,CAACvF,MAArB;AIsBF8S,IAAAA,WAAW,GAAG,EAAd;AJrBE,AHTF,MAAEpU,EGSIsB,GHTN,GGSY,IAAI,IAAV,IAAkB,CAAC8G,UAAU,CAACxF,GAAX,CAAetB,MAAf,CAAvB,EAA+C;AAC7C8G,AIqBJ,AP9BD,GA3B6B,CA6B9B,EGOMA,GIqBC9I,CAAC,GAAG,CAAT,EJrBc,AIqBFA,CJrBGoE,AIqBF,GJrBT,AIqBYD,CJrBGnC,EIqBA,GAAC,CJrBhB,AIqBJ,EAAuBhC,CAAC,EAAxB,EAA4B;AJpBzB,AIqBD8U,MAAAA,WAAW,CAACjQ,IAAZ,CAAiB,KAAKmO,QAAL,CAAchT,CAAd,CAAjB;AACA8U,MAAAA,WAAW,CAACjQ,IAAZ,CAAiBgQ,IAAjB;AJpBA,AIqBD,AP9BH,QGSQxS,CHTDtB,GGSK,EHTA,CGSGwG,AHTF7G,KAAK,EGSI,CAAC2B,AHTF,CAAT,CAAL,CAAiBnC,CGSpB,GHTG,CAAsB,KAAtB,IAA+BP,KAAK,CAACqB,MAAN,CAAab,KAAK,CAACrE,MAAN,GAAe,CAA5B,CAAtC;AACD;AGSK,AIqBFgZ,IAAAA,IJrBMzS,IAAI,GIqBC,CJrBG,AIqBFwC,IJrBN,AIqBN,CAAiB,GJrBK,CAACkE,CIqBDiK,OJrBS,CAAC1P,AIqBf,CAActD,CAAd,CJrBM,AIqBvB,CJrBoCqC,IAAb,CAArB,EAAyC;AACvC0G,AIqBJ,AP9BJpN,MGSQoN,CHTD,CAACtI,CO8BCuS,KJrBO,CAAC5O,CHTjB,CO8BI,CJrBI,CAAa/B,AHTF5B,CO8BCqU,GJrBZ,IHTR,IO8BI;AJpBG,AIqBJ;AJnBE,AHVL,GGxBI,CHwBA7T,CGUG,IAlCH,YHwBiB,GAAI,YAAY;AO8BnC,AP7BA,MAAIC,GO6BG,AP7BA,GAAGC,CO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,CDUE,QCVOsS,6BAAT,CAAuCX,GAAvC,EAA4C;ADW3C,AHxBE,AIcD,AP/BF,GGYE,GHZE7Y,CO+BG,EJbA,EIaIkE,CAAC,AP/BF,CGkBCkJ,EIaI,AP/BF,CO+BN,EAAW/E,GAAG,EJbA,CIaG,GJbC,EIaI6O,QJbM9J,AIaX,CAAcpN,MAApC,EAA4CkE,CJbnC,AIaoC,GAAGmE,CJbD,EIa/C,EAAqDnE,CAAC,EAAtD,EAA0D,GJbCkJ,UAAlD,IACGC,SADH,IACgB,UAAUA,SAD1B,IACuC,YAAYA,SADnD,IAEGD,UAAU,CAACxB,IAAX,GAAkB,CAFrB,IAE0BwB,UAAU,CAACvB,MAAX,IAAqB,CAF/C,IAGGwB,SAAS,CAACzB,IAAV,GAAiB,CAHpB,IAGyByB,SAAS,CAACxB,MAAV,IAAoB,CAH7C,IAIGyB,OAJP,EAIgB;AACnB,AISA,APhCW,QOgCP,KAAK4J,QAAL,CAAchT,CAAd,EAAiB2S,YAAjB,CAAJ,EAAoC;ADWxC7K,AHnBI,AISE,APjCN,EM2CAA,EN3CyC,KM2ClC,ECVIkL,CDUDlL,OAAO,ACVX,CDWHwC,ACXiBtK,CAAd,EDUI,ACVaqV,CDWhB/M,MADG,EAER,SCZI,CAAoCqM,GAApC;ADaJ,AHrBC,AISE,APjCH,GGiBK,MAQA,IHzBE,KAAP;AM8CA,AHpBE,AIQD,APjCF,UGyBS,IAAIxW,KAAJ,CAAU,sBAAsB0E,IAAI,CAACwG,SAAL,CAAe;AGgB/C,AHfJ5B,GGoBH6C,GALO,AHfJ7C,CGoBCpE,IAAI,CAAC3D,GHpBG,EAAEwJ,IGeP,EAMR,IHtBuD;AGuBvD,AHrBIlH,AIQJ,APjCF,MGyBMA,AIQA8F,APjCFxG,CAAC,CAAClD,IGyBM,CIQC,CJRCgL,EIQEjI,EPjCZ,CAAarF,EGuBwC,CIUnC,CAAC4M,EPjCA,EOiCP,CAAY,APjCF,CAAtB,IOiC6BuK,EPjCA,YOiCjB,CAAd;ADcA,AHrBIrL,AH1B+B,MG0B/BA,QAAQ,EAAEuB,SAHyC;AGyBvD,AHrBI9G,AIOJ,APlCE,KACAf,CG0BEe,AH1BD,COiCE,APjCDjE,GG0BI,CIOC4B,CJPCtB,AIOA,GAAG,CAAR,CPjCH,COiCcyF,APjCDrI,GOiCI,GAAGgM,APjCD,GAAG,CAAtB,GOiC2B,CAAChM,EPjCC,IOiC/B,EAAsCkE,CAAC,GAAGmE,GAA1C,EAA+CnE,CAAC,EAAhD,EAAoD;ADK5C,AHhB+C,AIYrD2U,APlCiC,GMgDlCrK,CCdCqK,CJZsC,CGgBhC,AHhBA,CG0BH,AH1BH,AIYG,CAACtR,IAAI,CAAC5B,IDcIO,MAAV,EAAkB,CCdjB,CAAmB8F,OAAO,CAAC9H,CAAD,CAA1B,CAAD,EAAiC,KAAKiT,cAAL,CAAoBnL,OAAO,CAAC9H,CAAD,CAA3B,CAAjC,CAAH;ADeA,AHrBD,AIOA,APpCC,KAEAsB,CAAC,CAAClD,IMgDK4E,MNhDP,CAAalH,GMgDI,GNhDE,CMgDEuH,ENhDC,CAAtB,CMgDyB,CAACzD,INhDG,MMgDR,CAAgBoD,UAAhB,CAAd,IAA6CK,IAAI,CAACzD,UAAL,CAAgBoC,MAAhB,CAA7C,GACHqB,IAAI,CAAC5C,QAAL,CAAcuC,UAAd,EAA0BhB,MAA1B,CADG,GAEHA,MAFJ;AAGD,AHvBF,AIOA,APnCoC,CGTvC,AIgCA,EDcY,CAAV,CA1ByD,CA0CzD;AACA,AHxBF,AIOA,APvCM,KAGAV,CAAC,CAAClD,UAAF,CAAatC,MAAM,GAAG,CAAtB,MAA6B;AMsDjC,ANtDqC;AMuDrC,AN1DI,KAIAwF,CAAC,CAAClD,UAAF,CAAatC,MAAM,GAAG,CAAtB,MAA6B;AAAI;AMuDrC,AN3DI,KAKAwF,CAAC,CMsDAuF,ANtDCzI,MMsDN,GAAcuF,CNtDV,CAAa7H,MMsDK,ANtDC,CMsDAgI,ENtDG,CAAtB,MMsDU,ANtDmB,CMsDA6G,KAAK,CAACL,GAAN,CAAUhC,MAAV,CAAnB,EAAsC,IAAtC,CAAd;AACA,ANvDqC,OMuDhC1B,QAAL,GAAgBjD,QAAQ,CAACG,SAAT,CAAmBgE,OAAnB,EAA4B,IAA5B,CAAhB;AAEA,AH1BFtB,AIOAoM,AP3CM,KAMAtR,CAAC,CMwDA4N,ANxDC9Q,GOqCE,CAACmF,MPrCL,CG8BY,AH9BCzH,CG8BAyH,CIOnB,CAAqBsH,EDmBnB,CNxDuB,EMwDC,CNxDE,CG8B5B,AH9BM,CG8BuBvB,AIO7B,EDmB+B1C,CCnBC,EPrCG,KMwDT,CAAcxB,CCnBCmQ,MDmBf,AH1B1B,GG0BkDjL,AHzBhD,GGyBwB,CAA4B,KHzB3Cf,CIMqB,GAA+B,CDmBCjI,CAAV,EAAa,4BHzBjE,GAAgD;AG0B9C,AHzBA,AIMF,APtCqC,MGgC/BkI,AIMF5G,GAAG,EDmBES,CCnBC,EAAV,CDmBa,CAACN,aHzBe,GGyBpB,AHzBuB,CGyBDC,AHzB7B,UGyBO,EAAkC1B,CAAlC,EAAqC4L,aAArC,CAAP;AACD,AHzBC,AIMF,AP7CI,GM8DoB,CAAxB,CNvDI5L,CGgCEmI,AHhCD,COsCAgL,APtCCrW,IOsCN,CAAU,KPtCN,CAAatC,IOsCGuY,EPtCG,GGgCI,AIMjB,APtCgB,CAAtB,COsCuB,CJNG,CAA5B,GHhC+B;AM2DjC,AH1BE,AIMAzR,APvCmC,IOuCnCA,EJNI8G,CG0BD1G,ACpBA,IAAIqR,KAAP,CDoBF,GAAkBrR,QH1BU,EG0B5B,CH1B+B,CAA7B;AG2BF,AH1BE,AIMD,AP/CG,GO6CJ,EPrCI1B,CGiCEqI,AHjCD,CM2DAiB,AN3DCxM,UAAF,CAAatC,GM2DjB,GAAsB8O,AN3DC,EGiCG,CHjCA,CAAtB,CGiCyB,CAA3B,IHjC+B,IM2DjC;AACA,AH1BE,AIMF,APxCqC,MGkC/BhB,CG0BD9C,ECpBElE,GAAP,IDoBA,EH1BkB,CG0BDqH,EH1BI,CAAnB,KG0BF;AACA,AH1BE,AIMH,APjDC,CO2CF,GPnCkD,EGmC1CJ,CG0BD6E,aAAL,AH1BoB,GG0BCxB,AH1BE,CAArB,YG0BF;AACA,AH1BE,AIOJ,AP1CI,MGmCIlP,CG0BDqJ,IAAL,CH1BY,CHnCH,CM6DGA,CH1BG,EAAb,CG0BF,AN7DE;AM8DH,AH1BG,AHnCD,MGmCKyC,IAAJ;AACA,MAAIvC,OAAJ;AG2BJ+F,AH1BI,AHnCF,MGmCMvD,CHnCD,IAAI/J,CAAC,CGmCR,EHnCWlE,MAAM,CM6DC,CAACyH,CN7DC,EAAtB,EAA0BvD,CAAC,GM6D7B,CN7DiC,CAA/B,CM6DiCmB,CN7DCnB,CAAC,EAAnC,EM6DuC,AN7DA,CM6DCoB,MAAP,CAAc4L,iBAAiB,CAACzJ,SAAhC,CAAnC;AACA+J,AH1BI,AHnCA,MGmCItD,EHnCA1I,CAAC,CAAClD,KGmCN,KHnCI,CAAa4B,CM6DC,AN7Dd,CM6DeuD,KN7DK,IM6D5B,CAAiC4L,QAAjC,GAA4CnC,iBAA5C;AAEA,AN/D+B;AGqC3B,AIKJ4F,AP1CI,MGqCI3I,AHrCkC,IO0ChC,CAAC1G,GJLK,GAAG,GIKnB,CAAqBiS,CJLG1O,SAAL,CAAe1B,OAAf,EAAf,CIKJ,GAA6C,SAASqQ,gCAAT,CAA0ChX,KAA1C,EAAiD;AAC5F,AP1CI,MO0CAgJ,SAAS,AP1CF,GO0CK,EP1CZ;AGqCF,AIMAwM,AP1CC,IO0CDA,GJNK,CIMD,EAAE,CJNGjU,CAAC,AIKI,GJLD,CAAR,EAAWmE,GAAG,GAAG8F,QAAQ,CAACnO,MAA/B,EAAuCkE,CAAC,GAAGmE,GAA3C,EAAgDnE,CAAC,EAAjD,EAAqD;AACnDuH,AIMFG,AP1CD,IGoCGH,AIMFG,IAAI,EAAE,CJNG,AIIK,GJJFuC,QAAQ,CAACjK,CAAD,CAAlB;AG4BNsN,AH3BMxD,AIMFnC,IJNEmC,AIMFnC,IJNM,EIMA,CJNG,CIMD,CJNN,SG2BgB,CAACpE,SAAvB,CAAiCuL,gBAAjC,GAAoD,UAAS1F,OAAT,EAAkB;AACpE,ACzBgB,APtChB,GOsCA,GDyBIgG,GN/DG,IAAP,OM+DkB,GAAGhG,OAArB;AH1BI,AIMJ,AP1CD,MO0CKkB,EJNI/C,CIMD,GAAG,GJNK,CAACnF,AIMFoE,aJNN,KAA0BiD,AIMxB,CAAuBhL,KAAvB,CAAV,cJNI,EAAqD;AG2BzD,AH1BM+K,AIMN,APzCF,MM6DM,AH1BEA,AIMFkM,KDoBK1S,UAAL,IAAmB,ACpBA,GAAG,CDoB1B,AH1B6B,EG0BA,CH1BG,CAA1B,AIMN;ADqBEoM,ACpBF,IDoBEA,ECpBEuG,YDoBY,GAAGtS,GCpBG,CDoBC,CAAC5C,CCpBC,IAAzB,GDoBmB,CAAc,KAAKuC,UAAnB,EAA+BoM,cAA/B,CAAjB;AACD,AH3BK,AION,MAAIwG,OJPSrO,OAAO,CAACnF,CIOD,GAAG,IAAvB,KJPa,KAA0BqH,qBAAjC,EAAwD;AACtDK,AIOR,MAAI+L,EJPI/L,IAAI,IAAI,GAAR,KIOc,GAAG,IAAzB;ADqBA,AH3BQL,AIOR,MDoBI,ACpBAqM,EJPIrM,GG2BC7C,QAAL,CAActD,ECpBE,CDoBhB,CAAkB8L,CCpBC,IJPM,AIO7B,SDoBI,CAAJ,EAAuC;AACrC,AH3BK,AIOP,OAAKqF,IDoBI,ACpBT,CAAU,IDoBI7N,MCpBMyN,EDoBX,CAAc1T,ECpBb,EAAiBiH,GDoBlB,CAAsBwH,ICpBrB,EAA2B,QDoB5B,CAAP;AACD,AH3BI,AIOH3H,GDYkE,CAUpE,ACtBEA,CJbE,MAOK,EIME,CAACwM,IAAV,IAAkBI,KAAlB;ADuBF,AH5BM,UAAIrU,CAAC,GAAG,CAAR,EAAW;AACT,AIKN,QAAI4H,IJLM,CAACvE,GIKC,CJLG,AIKFrB,CJLGU,KIKZ,KAAoB,IAApB,IACGkF,QAAQ,CAACF,IAAT,IJNI,CAAyCH,AIM3B,IADrB,GJLO,CIOJK,CJPsDqC,OIO9C,CJPsD,AIOrDtC,CJPsD3H,CAAC,GAAG,CAAL,AIO9D,CJPI,CAAL,EAAyE,CIOpD,IAF3B,EAEiC;AJNzB,AION,UAAG2V,kBAAkB,KAAK/N,QAAQ,CAAC5F,MAAhC,IACG4T,gBAAgB,KAAKhO,QAAQ,CAACF,IADjC,IAEGmO,kBAAkB,KAAKjO,QAAQ,CAACD,MAFnC,IAGGmO,gBAAgB,KAAKlO,QAAQ,CAACvF,IAHpC,EAG0C;ADiB9C,AH1BS,AIUHiI,AP/CR,MM+DMtK,CAAJ,CChBMsK,CP/CC5I,EO+CE,CAACmG,UAAJ,CAAe,YP/CvB,CAAoClG,QAApC,EAA8CC,QAA9C,EAAwDC,mBAAxD,EAA6E;AOgDnEG,AP/CR,MAAIF,GAAG,CO+CCE,EP/CED,IO+CI,EAAE6F,AP/CA,CAACjG,OO+CO,CAACK,AP/CA,CAACA,KO8CL,CP9CL,EAAkBJ,QAAQ,CAACI,MAA3B,CAAhB;AM+DA,AH1BQ8H,AIWAlC,ODeH5H,CAAC,AH1BE8J,EIWAlC,CDeC,CAAT,AH1BY,EG0BA5H,CAAC,CH1BG,EG0BA,ACfA,CJXR,CIWU,GDeGkP,gBAAL,CAAsBpT,MAAtC,EAA8C,EAAEkE,CAAhD,EAAmD;AACjD,AH1BK,AIWG0H,APhDV,MAAI5F,EM+DE,CN/DC,GOgDG4F,CDeCwH,CN/DC,CAAZ,COgDc,CPhDC,COgDCtH,QAAQ,CAACF,EDenB,CAAsB1H,CAAtB,AChBY,KDgBgBoJ,OAAhC,EAAyC;AACvC,AH1BC,AIWKzB,APhDR,WAAO7F,COgDC6F,CDeC3H,CAAP,AN/DF,IOgDc,EAAE4H,QAAQ,CAACD;ADgBxB,AClBe,AP7CjB,WO2CoB;ADqBpB,AH1BGmC,AIWIrC,IJXJqC,IAAI,EIWArC,EJXIlB,OIWK,EJXI,AIWF,CJXG3K,MAAV,CAAiB2L,OAAO,CAACpF,eAAR,GACIqH,uBADrB,CAAR;AAEAA,AIUM9B,APhDV5F,EAAAA,EGsCI0H,CHtCD,GAAG7H,IOgDI+F,IAAI,APhDA,CAACzF,COgDCwF,SJVW,AIUF,CAACC,CPhDpB,CGsCwBH,EISX,AP/CW3F,KGsCO,CAACO,EHtCA,CAACF,YGsCnC,AHtCJ;AMgEA,ACfU0F,SDeH,CAAC,CAAR,CCfUA,MAAM,EAAEF,SAAS,CAACE;ADgB7B,AHzBK,AIOe,AP9CnB,CM4CF,KN5CM7F,EGuCIyF,CHvCD,EOwCc,GPxCT,CGuCG,AHvCf,CGuCgBvF,CHvCD,KGuCP,IAAkB,IAAtB,EAA4B;AG2BlC,AH1BQgI,AIUE3H,APjDN,MGuCI2H,IIUE3H,CPjDCP,GOiDG,APjDV,CGuCa,CIUD8F,EJVI,KAAKhB,CIUD,CAACvE,MJVL,CAAc1B,OAAd,CAAsB4G,OAAO,CAACvF,MAA9B,CAAZ;AACA8H,AIDe,APtCpB,MGuCKA,GIDA,CJCI,IAAIvD,SAAS,CAAC3K,MAAV,CAAiBoO,SAAS,GAAGH,cAA7B,CAAR;AACAA,AIUD,MJVCA,cAAc,GAAGG,SAAjB,CAH0B,CAK1B;AHxCNlI,EAAAA,GAAG,GAAGH,QAAQ,CAACO,cAAT,GAA0BN,QAAQ,CAACM,cAAzC;AGyCM4H,AIQF6L,MJRE7L,AIQF6L,IJRM,IAAIpP,SAAS,CAAC3K,AIQF,GAAGgM,GJRX,CAAiBL,IIQE,CAACvF,EJRI,CAACC,GIQnC,SJR2B,GAAuB,CAAvB,GACI0H,oBADrB,CAAR;AAEAA,AIOFiM,APjDJ,MG0CMjM,AIOFiM,APjDA9T,GAAG,KAAK,CAAR,IAAaD,GOiDG,GAAG+F,CJPG,GAAGL,IIOE,CAACG,EJPI,CAACzF,CIOjC,APjDJ,EAAsC,SG0CT,GAAuB,CAA9C;AAEA6H,AIMF+L,APjDF,MG2CI/L,AIMF+L,IJNM,CH3CD/T,GG2CKyE,AH3CZ,SG2CqB,CAAC3K,AIMF,GAAGgM,GJNX,CAAiBL,IIME,CAACI,EJNI,CAACzF,GIMnC,WJN2B,GACIwH,sBADrB,CAAR;AAEAA,AIKFoM,APjDH,MG4CKpM,AIKFoM,gBAAgB,GAAGlO,GJLK,GAAGL,EIKA,CAAClF,IJLM,AIKlC,CJLmCH,cAAjC;AIMFwT,MAAAA,mBAAmB,GAAG,IAAtB;AJJE,AIKH,APjDH5T,EAAAA,GOwBE,APxBC,GAAGH,EG4CI4F,CIKD,IAAImO,CPjDC,CG4CG,AH5CFvT,CG4CGE,IAAR,IAAgB,IAApB,EAA0B,AH5C1B,EOiDG,CPjDwBT,COiDC,OPjDO,CAACO,eAA1C;AG6CQ4H,AIKJO,MAAAA,EJLIP,CIKD,CAAClC,KJLO,GAAG,EIKd,CAAe,EJLIhB,MAAL,CAAYlG,OAAZ,CAAoB4G,OAAO,CAAClF,IAA5B,CAAV;AGqBViL,AHpBUxD,AIKFrC,APlDN,MAAI3F,EG6CIgI,AIKFrC,CPlDC,GG6CK,EH7CA,CAAZ,CG6CgBlB,CIKD,APlDA,EOkDE,GDeG,CAACU,EHpBI,CAACrL,MAAV,CAAiBmO,GGoBnC,GACE,CHrBwC,GAAGH,KGqBlCyF,OHrBO,CAAR,uBGqBR,CAAyCpC,UAAzC,EAAqDC,aAArD,EAAoE;AAClE,AHrBMtD,AIKAlC,APlDN,MMkEI4H,EHrBE1F,CGqBC,CChBDlC,CPlDC5F,CMkEGX,EChBA,APlDV,EOkDYsG,EDgBI,CAACrG,CHrBC,GAAG2I,EGqBX,AChBW,CDgBGuD,AChBF5F,IJLhB,AIIS,kBDiB+B,CAACnE,SAArC,CAAV;AAEA,AHtBK,AIKCoE,APlDP,MMmEKgD,ICjBEhD,CDiBG,GAAG2H,ECjBA,CDiBG,CAACzI,ACjBFY,MDiBF,GAAa9D,ACjBF,CAACgE,ODiBS,CAAC7D,SAAT,CAAmBmJ,UAAU,CAACpG,MAAX,CAAkBzB,OAAlB,EAAnB,EAAgD,IAAhD,CAAzB;AACA,AHtBG,AIEY,MDoBX0C,OAAO,GAAGwH,GAAG,CAAC1I,QAAJ,GAAejD,QAAQ,CAACG,SAAT,CAAmBmJ,UAAU,CAACrG,QAAX,CAAoBxB,OAApB,EAAnB,EAAkD,IAAlD,CAA7B;AACAkK,ACtBiB,AP7CnBxN,EMmEEwN,ANnEFxN,GMmEK,ANnEF,CMmEGkB,CCtBF,CP7CErB,QMmEJ,ANnEY,CAACS,EMmEI6K,UAAU,CAACvG,ANnExB,GAAyB9E,QMmE7B,ANnEqC,CAACQ,aAAxC;AMoEEkN,AHtBEtR,AIKA2X,EDiBFrG,EHtBEtR,CGsBC,CAAC4M,ACjBF+K,IJLM,IAAI7L,IAAV,EGsBF,GAAqBmD,CCjBD,GAAG,IAArB,EDiB6B,CAAC/C,uBAAX,CAAmCoF,GAAG,CAAC1I,QAAJ,CAAaxB,OAAb,EAAnC,EACmCkK,GAAG,CAACtM,UADvC,CAArB;AAEAsM,AHvBC,AIKCoG,APnDJ,EMqEEpG,GAAG,CAACjI,AClBFqO,APnDA5T,GAAG,CMqEL,GAAWmL,CNrED,CAAZ,EAAe,MMqEQ,CAACxG,CClBD,GAAG,CDkBxB,IClBE;ADmBF6I,AClBC,APnDD,EMqEAA,GAAG,CAACZ,KNrEG5M,GAAP,KMqEA,GAAoBoL,aAApB;AACAoC,AHvBA,AH9CD,EMqECA,GAAG,CAACJ,GHvBGlR,MAAP,OGuBA,GAAuBsR,GAAG,CAAC1I,QAAJ,CAAaxB,OAAb,GAAuBkF,GAAvB,CAA2B,UAAUhJ,CAAV,EAAa;AAC7D,AHvBH,AIIC,CJpEJ,QIoES,EDmBI+B,ECnBAuB,EDmBI,CAAC7B,ACnBF,GAAG,CAAV,EAAajH,MAAM,GAAGuY,CDmBlB,CAAsB/E,GAAG,ACnBF,CDmBGtM,ACnBFlH,MAAjC,EAAyC8I,EDmBhC,CCnBmC,CDmBGtD,CAAtC,CCnBsCxF,CDmBGoR,KCnBlD,EAAuDtI,GAAG,EAA1D,CDmBS,CAAP,ACnB4D;ADoB7D,ACnBC,APlDJ,GMmEyB,CAAvB,CAVkE,CAclE,GNvEK7C,COkDCsS,KAAK,APlDA,COkDCjW,APlDAuD,QAAQ,CAACU,COkDf,CAAiBuC,EPlDZ,COkDL,CPlDqBhD,KOkDK8Q,GPlDG,CAACrQ,IAAzB,CAAb,GOkDI,EAA4C;ADsB9C,AHzBJmE,AIIQiB,APlDP,QOkDOA,SAAS,CJJC,AIIAC,CJJCnE,GIIX,MJJR,CAA6B2G,uBAA7B,GACE,SAASC,yCAAT,CAAmDC,QAAnD,EAA6DC,WAA7D,EAA0E;AGyBxE,AHxBA,AIGI5C,QAAAA,CJHG2C,QAAQ,AIGF,CJHGE,AIGF3C,GJHP,CAAa,EIGhB,GAAmB,CAAnB,CAF0C,CAG1C,EJJ0B3F,MAAV,EAAkB;AGyBtC,AHxBE,AHhDNrG,OAAO,CGgDG,AHhDF+F,CGgDG,KAAKqF,gBAAV,EAA4B,EHhDlC,GAAqCrF,0BAArC;AGiDQ,AIGA,APlDR,YOkDYkD,CJHG,EIGA,EJHP,CIGU,CAAN,KAAY9I,MAAhB,EAAwB;ADsB5B,AHxBG,AIGG6Z,MDqBFpG,ICrBEoG,aDqBe,GAAG1I,ECrBA,GAAG,IAArB,CDqB4B,CAACnG,SAAX,CAAqB1B,OAArB,GAA+BtE,KAA/B,EAAxB;ACpBM4U,UAAAA,mBAAmB,GAAG,KAAtB;ADqBN,AHxBE,AIIG,MDoBDlG,EHxBEnF,CICF,MAGO,IJJM,AIIFqL,IJJM,IGwBI,AHxBvB,EAAyB,CGwBCpG,GAAG,CAAC/B,ICpBrB,EAAyB,aDoBR,GAA0B,EAAtD;AACA,AHxBIvL,AIIEsI,MDoBFmF,AHxBAzN,IIIEsI,EJJI,CIID,CAACzC,CJJGxE,IAAI,CAAC5C,IIIZ,CAAe,CDoBG,EHxBX,CGwBc6O,AHxBAjF,GGwBG,CAACuD,OHxBlB,EAA2B5L,MAA3B,CAAT,EGwBuB,GAAyB,EAApD;AHvBG,AIIKA,YAAAA,MAAM,EAAE4F,QAAQ,CAAC5F,MADJ;ADsBrB,ACpBQ4F,ODoBH,IAAI5H,CAAC,ACpBF4H,GDoBK,CAAR,EAAW9L,ECpBA,EAAE,EDoBI,GAAGyT,iBAAiB,CAACzT,MAA3C,EAAmDkE,CAAC,GAAGlE,MAAvD,EAA+DkE,CAAC,EAAhE,EAAoE;AAClE,AHzBA,AIKQ0H,QDoBJgI,AHzBAnF,GAAG,GAAGlH,AIKFqE,IDoBM,AHzBA,AIKF,CJLGnG,CIKDqG,CDoBG2H,OCpBK,CAAC7H,CJLb,CAAiB1F,EIIX,IJJN,CGyBwB,AHzBlC,CGyBmChC,CAAD,CAAlC;AACA,AHzBA,AIKQ2H,QDoBJgI,GHzBGxO,GIKCwG,GJLK,CAACpE,CGyBC,CCpBD,EDoBI,ACpBFqE,IDoBMgI,CHzBf,CAAiBpM,EIKA,CAACmE,EDoBP,EAAlB,OHzBO,CAAgChD,IAAhC,CAAqC,KAAKoC,gBAA1C,EAA4DwD,GAA5D,IACH,KAAKxD,gBAAL,CAAsBwD,GAAtB,CADG,GAEH,IAFJ;AG0BAoF,AHvBD,AIAiB,GJXX,CGkCLA,CHvBC,IAXI,CAAP,GISqB,EDyBR,CAACvN,aAAZ,GAA4BsN,UAAU,CAACtN,aAAvC;AACAuN,AHvBH,AIGSlI,APnDZ,CGkCA,GGqCMkI,KNvEGrN,GOmDGmF,GDoBK,CAACtF,KCpBG,EAAE,QDoBjB,GAA8BuN,UAAU,ANvE9C,CMuE+CvN,ANvEFR,QAA7C,EAAuDC,KMuEjD,GNvEN,EAAiEW,oBAAjE,EAAuF;AGkDvF,AIEcmF,APnDZ,MAAI5F,GAAG,GAAGH,EOmDE+F,IAAI,EAAED,APnDA,CAACrF,QOmDQ,CAACsF,IADP,APlDX,GAAyB9F,QAAQ,CAACQ,aAA5C;AMwEI,ACpBQuF,QDoBJ+H,MCpBI/H,IDoBM,CAAC3F,CCpBD,EAAEyF,GDoBhB,EAAuB,ICpBE,CAACE;ADqBxBgI,ACvBe,APjDrB,MMwEMA,ANxEF7N,GAAG,IO2CgB,CP3CX,CAAZ,EMwEiB,ANxEF,CMwEGE,MAAZ,GAAqB8F,OAAO,CAACnH,OAAR,CAAgB+O,UAAU,CAAC1N,MAA3B,CAArB;AACA2N,ACpBItN,APpDR,MMwEIsN,KNxEG7N,COoDCO,EPpDR,EOoDY,CDoBG,CAACJ,ACpBF2F,QAAQ,CAACvF,GDoBnB,GAA2BqN,UAAU,CAACzN,YAAtC;AACA0N,AC/BiB,APzCtB,MMwEKA,KC/BE,MD+BS,CAACzN,cAAZ,GAA6BwN,UAAU,CAACxN,cAAxC;AHvBRsE,AIIS,kBJJS,CAACjD,SAAnB,CAA6BiH,MAA7B,GACE,SAASC,yBAAT,GAAqC;AGwB/B,AHvBJ,AIGG,APpDL3I,EAAAA,GAAG,CGiDGwI,CIlBF,CP/BE3I,CGiDG,CGuBC+N,EHvBE,CIGD,GPpDG,CAACvN,GMwEK,CAACE,IAAf,EAAqB,KNxErB,GAA2BT,QAAQ,CAACO,eAA1C;AMyEQwN,AHvBJjF,AIGEjD,IJHFiD,IGuBIiF,ACpBFlI,GJHK,EAAE,IIGE,CJHGT,AIGFW,CDoBG,CAACtF,IAAZ,ACpBF,EJJM,CGwBesI,KAAK,CAAChK,OAAN,CAAc+O,UAAU,CAACrN,IAAzB,CAAnB;AACD,AHvBHyF,AIGC,APrDL,IGkDIA,EHlDAhG,GAAG,EGkDI,EAAE,CHlDD,CAAR,GGkDc8E,CHlDDrE,OGkDJ,CAAc6C,OAAd,EAFD,GHhDZ,EAAuC;AGmDnCuF,AIGD,APrDD,IGkDEA,KAAK,EAAE,AHlDF7I,GAAP,EGkDc+E,MAAL,CAAYzB,OAAZ,EAHC;AG2BNqK,AHvBFxF,AIGH,APrDA,GOVD,CJ4DIA,EGuBEwF,MHvBM,EAAE,KAAKnG,OGuBO,CAACzE,IAArB,CAA0B8K,KHvBlB,MGuBR;AACD,AH5BO,AIQZ,GJRE,IIQG0F,kBAAL,CAAwB,UAAUtN,UAAV,EAAsBgO,aAAtB,EAAqC;AAC3DzL,APrDFxI,EAAAA,EOqDEwI,CPrDC,EOqDE,CAACnC,APrDApG,MAAM,CAACJ,QAAQ,COqDnB,APrDoBK,COqDC+F,KPrDX,EAAkBnG,GOqD5B,EAAiCmU,GPrDG,CAAC/T,MAA3B,CAAZ,EOqDE;ADqBEwN,AHxBF,AIID,GAFD,CDsBIA,EHxBE,KAAK/I,KAAL,IAAc,IAAlB,CGwBuB,CAAC5B,AHxBA,IGwBtB,CAA2B8K,WAA3B;AACD,AHxBCrF,AIKJ,APvDA,IGkDIA,EHlDAxI,CGkDG,CAACuF,CIKD,APvDA,GGkDH,EHlDQ,CGkDG,AHlDf,EAAe,GGkDKZ,KAAhB;AACD,AIIMwN,APtDP,IOsDOA,IAAI,EAAExM,CPtDN3F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","file":"source-map.8cb43e17.js","sourceRoot":"../assets","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n"]}